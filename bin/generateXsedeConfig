#!/usr/bin/perl

use strict;
use warnings;
use File::Basename;
use File::Spec;

print "Starting\n";
my $JAR = ".jar";
my $XSLT_CLASS = "org.apache.xalan.xslt.Process";

my $xslthome = dirname( $0 ) . "/../";
print "$xslthome\n";
my @jars = glob( "lib/*.jar" );

my @classpath = @jars;

sub readAndPrintFile {
  my $filename = shift;
  my $fd = shift;

  open( READ, "<$filename" ) || die "Unable to open $filename";
  while( <READ> ) {
    next if /\?xml/;
    print $fd $_;
  }
  close READ;
}

my $fd;
open( $fd, ">xsede-config-input.xml") || die "Unable to open xsede-config-input.xml";
print $fd "<reqs2config>\n";
readAndPrintFile( "xsede-config.xml", $fd );
readAndPrintFile( "componentsprequirement.xml", $fd );
readAndPrintFile( "componentsprequirement-extra.xml", $fd );
print $fd "</reqs2config>\n";
close $fd;

# create a new version of config.xml with kit queries and groups
# auto-generated
my $cmd = "java -cp " . join( ":", @classpath ) . " " . $XSLT_CLASS . " " .
          "-xsl $xslthome/etc/reqs2config.xsl -in $xslthome/xsede-config-input.xml > xsede-config-output.xml";
print "$cmd\n";
`$cmd`;
exit(1) if $? != 0; 

# remove namespaces from config tag
$cmd = "cat xsede-config-output.xml | sed 's/^<config.*\$/<config>/' > xsede-config-auto.xml";
print "$cmd\n";
`$cmd`;
exit(1) if $? != 0; 
unlink "xsede-config-input.xml";
unlink "xsede-config-output.xml";

