#!/usr/bin/env perl

use strict;
use warnings;
use File::Basename;
use Inca::Reporter::SimpleUnit;

my $reporter = new Inca::Reporter::SimpleUnit(
	name => 'xsede.admin.resourceid.unit',
	version => 2,
	description => 'Check ResourceID supplied by xdresourceid and xdusage commands',
	unit_name => 'resourceid'
);
$reporter->addArg( 'registered', 'The resource name in info services' );
$reporter->processArgv( @ARGV );
my $registered = $reporter->argValue( 'registered' );

my @err;

my $xdresourceid_cmd = 'xdresourceid -c';
my %xdresource_out;
my @xdresource = $reporter->loggedCommand( $xdresourceid_cmd );
if ( $? != 0 )
{
	push( @err, "$xdresourceid_cmd: $!" ); 
}
else
{
	foreach my $line ( @xdresource ) 
	{
		my @val = split( '=', $line );
		$val[1] =~ s/\"\s+$//;
		$val[1] =~ s/^\"//;
		if ( $val[0] !~ /^\s*$/ and $val[1] !~ /^\s*$/ )
		{
			$xdresource_out{ $val[0] } = $val[1];
		}
	}
}

if ( %xdresource_out )
{
	if ( $registered ne $xdresource_out{'ResourceID'} )
	{
		push( @err, "xdresourceid ResourceID (" . $xdresource_out{'ResourceID'} . ") and registered ($registered) names differ" );
	}
	if ( $xdresource_out{'Title'} =~ /^\s*$/ )
	{
		push( @err, "xdresourceid Title is empty" );
	}
	if ( $xdresource_out{'SiteID'} =~ /^\s*$/ )
	{
		push( @err, "xdresourceid SiteID is empty" );
	}
}

my $xdusage_resource;
my $xdusage_cmd = 'which xdusage';
my $xdusage = $reporter->loggedCommand( $xdusage_cmd );
if ( $? != 0 )
{
	push( @err, "$xdusage_cmd: $! $xdusage" ); 
}
else
{
	chomp( $xdusage );
	my $xdusage_resource_cmd = 'cat ' . dirname( $xdusage ) . '/resource_name';
	$xdusage_resource = $reporter->loggedCommand( $xdusage_resource_cmd );
	if ( $? != 0 )
	{
		push( @err, "$xdusage_resource_cmd: $! $xdusage_resource" );
	}
	else
	{
		chomp( $xdusage_resource );
		if ( %xdresource_out and ( $xdusage_resource ne $xdresource_out{'XDCDB_resource_name'} ) )
		{
			push( @err, "xdusage ($xdusage_resource) and xdresourceid XDCDB_resource_name (" . $xdresource_out{'XDCDB_resource_name'} . ") names differ" );
		}
	}
}

if ( @err )
{
	$reporter->failPrintAndExit( join( "\n\n", @err ) ); 
}
$reporter->unitSuccess();
$reporter->print();
