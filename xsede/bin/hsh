#! /bin/csh

# hsh -- use .hhosts data base to execute a remote command
# See accompanying man page for details
# Author: Jim Hayes

set login = ""

if ($#argv > 1) then
  if ("$argv[1]" == "-l") then
    set login = "$argv[2]@"
    shift
    shift
  endif
endif

if ($#argv == 0) then
  echo "hsh [-l <login>] <machine> [<command>]"
  exit 1
endif

set machine = $1
set loginAndMachine = $login$machine

set entries = ( `hlookup $loginAndMachine` )
set entries = ( `hlookup "$loginAndMachine" | awk ' {print $1 " " $2 " " $3 " " $4}'` )

if ($#entries == 0) then
  echo "Unknown login/host $loginAndMachine"
  exit 1
else if ($#entries != 4) then
  echo "Ambiguous login/host $loginAndMachine"
  while ($#entries)
    echo "  $entries[3]@$entries[2].$entries[1]"
    shift entries
    shift entries
    shift entries
    shift entries
  end
  exit 1
endif

set command = "$argv[2-]"
set exec = $entries[4]
set login = $entries[3]
set machine = $entries[2].$entries[1]

if ("$exec" =~ *+*) then
  set exec = (`echo $exec | sed 's/+/ /g'`)
endif

if(("$exec" =~ *[rs]sh*) && ("$command" =~ *\&)) then
  set remoteShell = `$exec -l $login $machine 'echo $SHELL'`
  set command = `echo $command | sed 's/.$//'`
  if("$remoteShell" =~ *csh) then
    set command = "$command < /dev/null >& /dev/null &"
  else
    set command = "$command < /dev/null > /dev/null 2>&1 &"
  endif
endif

if("$command" == "") then
  $exec -l $login $machine
else
  $exec -l $login $machine "$command"
endif
