#! /usr/bin/perl -w

################################################################################

=head1 NAME

EmailNotifier -- an Inca Depot notifier that sends email

=head1 SYNOPSIS

  perl EmailNotifier target [...]

=head1 DESCRIPTION

  This is an Inca Depot notifier that uses either sendmail or mailx to send
  email to one or more addresses when the results of a series comparison
  change.  Each target argument to the script is an email address, optionally
  preceded by a "Pass:" or "Fail:" prefix.  Those addresses with a prefix only
  receive emails for passing or failing comparisons; those with no prefix
  receive both.  The format of the email subject and body can be modified by
  changing the values of the $subject and $body variables defined below.

=cut

################################################################################

use strict;
use warnings;
use Date::Manip;

exit if scalar(@ARGV) < 1;

my $err = $ENV{incaerrorMessage};
my $noemail = defined($err) && $err =~ /(^DOWNTIME:|Inca error|^NOT_AT_FAULT:)/;

if (!$noemail){
my $name = $ENV{incanickname} || $ENV{incareporter};
my $subject =
  "Inca TeraGrid Notification: $name on $ENV{incaresource} $ENV{incaresult}";
my $body =
  "The following Inca test has $ENV{incaresult}ED:\n\n" .
  "RAN AT:  $ENV{incacollected}\n\n" .
  "RAN ON:  $ENV{incahostname}\n\n" .
  "TEST:  $ENV{incareporter}\n\n" .
  "INPUT PARAMETERS:  $ENV{incaargs}\n\n" .
  (defined($ENV{incalog}) ? "LOGGED COMMANDS: $ENV{incalog}\n\n" : "") .
  (defined($err) ?  "ERROR MESSAGE: $err\n\n" : '') .
  (defined($ENV{incastderr}) ? "STANDARD ERROR: $ENV{incastderr}\n\n" : "") .
  "\n\n" .
  "details at http://sapa.sdsc.edu:8080/inca/jsp/instance.jsp?xsl=instance.xsl" .
  "&instanceId=$ENV{incainstanceId}&configId=$ENV{incaconfigId}" .
  "&resourceId=$ENV{incaresource}\n\n";

my $baseDateString = "Tue Feb 19 10:00:00 PST 2008";
my $baseDate = ParseDate( $baseDateString );
my $date = ParseDate( $ENV{incacollected} );
if ( Date_Cmp($date, $baseDate) < 0 ) {
  `echo "Ignoring old report $ENV{incacollected}" >> email.log`;
  exit 0;
}

my $mailPath = "/usr/sbin/sendmail"; # or my $mailPath = `which mailx`;
my $subjectPrefix = 'Subject:'; # or my $subjectPrefix = '~s';
 
my $failed = defined($ENV{incacomparisonResult}) &&
             $ENV{incacomparisonResult} =~ /^Failure/;
foreach my $email(split(/[\s,;]+/, join(' ', @ARGV))) {
  my @pieces = split(/:/, $email);
  if(scalar(@pieces) == 1 || 
     ($failed && $pieces[0] =~ /^Fail/) ||
     (!$failed && $pieces[0] !~ /^Fail/)) {
     open(MAIL, "|$mailPath $pieces[$#pieces]");
     print MAIL "$subjectPrefix$subject\n";
     print MAIL "To:$pieces[$#pieces]\n" if $mailPath =~ /sendmail/;
     print MAIL $body;
     close(MAIL);
  }
}
}else{
  `echo "No email for report with error: $err" >> email.log`;
  exit 0;
}
