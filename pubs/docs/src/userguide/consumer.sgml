<section id="userguide-consumer">
<title>Data Display (Data Consumers)</title>

<para>The data that the Inca depot stores, as with all database data, can be displayed in many ways.  A data consumer is anything that 
retrieves data from the depot and displays it (e.g. a JSP, sql query, CGI, etc.).</para>

<graphic fileref="figures/arch-consumer.jpg" align="center"></graphic>
<para>  Data consumers can query the Inca depot to produce current and historical reports and graphs 
or customized status information.  The Inca depot comes with two pre-defined queries: 
<orderedList>
<listItem>
<para>given instance and config IDs for a series, returns XML like the following (the results from executing
a reporter at a particular point in time)
<screen>&lt;reportDetails&gt; 
  &lt;suiteId&gt;1&lt;/suiteId&gt;
  &lt;seriesConfigId&gt;5&lt;/seriesConfigId&gt;
  &lt;seriesId&gt;5&lt;/seriesId&gt;
  &lt;reportId&gt;1&lt;/reportId&gt;
  &lt;instanceId&gt;73&lt;/instanceId&gt;
  &lt;seriesConfig&gt;
     ...    
    &lt;nickname&gt;java_hello_world&lt;/nickname&gt;     
     ...
  &lt;/seriesConfig&gt;
  &lt;report&gt;
     ...
  &lt;/report&gt;
  &lt;sysusage&gt;
     ...
  &lt;/sysusage&gt;
  &lt;stderr/&gt;
&lt;/reportDetails&gt;</screen>
</para>
</listItem>
<listItem>
<para>given a suite name, returns XML like the following (the latest report summaries for all of the series in the particular suite)
<screen>&lt;reportSummary&gt;
  &lt;hostname&gt;Computer.local&lt;/hostname&gt;
  &lt;uri&gt;http://repository/compiler.any.unit&lt;/uri&gt;
  &lt;nickname&gt;java_hello_world&lt;/nickname&gt;
  &lt;seriesConfigId&gt;5&lt;/seriesConfigId&gt;
  &lt;instanceId&gt;73&lt;/instanceId&gt;
  &lt;gmt&gt;2006-12-20T16:00:11.000-08:00&lt;/gmt&gt; 
  &lt;body&gt;
    &lt;package&gt;
      &lt;ID&gt;openssl&lt;/ID&gt;
      &lt;version&gt;0.9.7i&lt;/version&gt;
    &lt;/package&gt;  
  &lt;/body&gt;  
&lt;/reportSummary&gt;
&lt;reportSummary&gt;...&lt;/reportSummary&gt;
&lt;reportSummary&gt;...&lt;/reportSummary&gt;</screen>
</para>
</listItem>
</orderedList>
</para>
<section id="default-consumer">
<title>Default Data Consumer</title>
<para>
The default data consumer is a <ulink url="http://www.mortbay.org/">Jetty</ulink> deployed WAR file ($INCA_DIST/etc/inca-consumers.war) that contains a set of JSP pages along with their associated files and stylesheets.  Currently the WAR file cannot be deployed outside of the inca consumer server (e.g. in tomcat).  The WAR's index.jsp page (<ulink url="http://localhost:8080/index.jsp">http://localhost:8080/index.jsp</ulink>) allows its user to choose "suiteName" and "resourceID" parameters for a second JSP page called xslt.jsp.  The xslt.jsp script retrieves XML (partly from the second pre-defined query shown above) and formats it with an XSL stylesheet if the script is passed the name of a stylesheet as an input parameter. The default data consumer redirects to the xslt.jsp script and adds an input parameter with an XSL stylesheet so the result is formatted html (i.e. index.jsp redirects to something like <ulink url="http://localhost:8080/inca/xslt.jsp?suiteName=sampleSuite&amp;resourceID=defaultGrid&amp;xmlFile=swStack.xml&amp;xsl=default.xsl">http://localhost:8080/inca/xslt.jsp?suiteName=sampleSuite&amp;resourceID=defaultGrid&amp;xmlFile=swStack.xml&amp;xsl=default.xsl</ulink>).</para> 

<para>To view the XML that is retrieved and formatted by the xslt.jsp script, remove its XSL parameter.  For example, <ulink url="http://localhost:8080/inca/xslt.jsp?suiteName=sampleSuite&amp;resourceID=defaultGrid&amp;xmlFile=swStack.xml">http://localhost:8080/inca/xslt.jsp?suiteName=sampleSuite&amp;resourceID=defaultGrid&amp;xmlFile=swStack.xml</ulink> would produce something similar to: 
</para>
<orderedList>
<listItem>
<para>
&lt;all2allSummaries&gt;  
(cross-site test results calculated by the consumer): 
</para>
<para>
The default installation doesn't include cross-site tests; this section will be empty unless the Inca admin creates all2all series in incat.  Cross-site, or "all to all", tests determine whether all resources in a Grid can reach all other resources (e.g. via gsissh, gram, gridftp).  To be included in cross-site test calculation, a series must 
be assigned a nickname like "all2all:x_to_y" in incat.  Cross-site failures are calculated differently than regular failures.  For example, resource A will not be assigned a failure trying to reach resource B if all other resources trying to reach resource B also fail (i.e. there is a problem with resource B not resource A).  <xref linkend="userguide-incat-all2all"> describes how to configure all2all tests in incat.
<screen>&lt;all2allSummaries xmlns="http://inca.sdsc.edu/dataModel/all2all_2.0"&gt;
  &lt;resources xmlns=""&gt;
    &lt;resource&gt;
      &lt;name&gt;localResource&lt;/name&gt;
      &lt;testSummaries&gt;
        &lt;testSummary&gt;
          &lt;name&gt;gridftp&lt;/name&gt;
          &lt;numSuccesses&gt;15&lt;/numSuccesses&gt;
          &lt;numAtFaultFailures&gt;0&lt;/numAtFaultFailures&gt;
          &lt;numNotAtFaultFailures&gt;1&lt;/numNotAtFaultFailures&gt;
          &lt;failures/&gt;
        &lt;/testSummary&gt;
        &lt;testSummary&gt;
          &lt;name&gt;gram&lt;/name&gt;
          &lt;numSuccesses&gt;13&lt;/numSuccesses&gt;
          &lt;numAtFaultFailures&gt;1&lt;/numAtFaultFailures&gt;
          &lt;numNotAtFaultFailures&gt;0&lt;/numNotAtFaultFailures&gt;
          &lt;failures&gt;
            &lt;failure&gt;
              &lt;nickname&gt;all2all:gram_to_localResource&lt;/nickname&gt;
              &lt;instanceId&gt;239352&lt;/instanceId&gt;
              &lt;seriesConfigId&gt;172057&lt;/seriesConfigId&gt;
            &lt;/failure&gt;
          &lt;/failures&gt;
        &lt;/testSummary&gt;
      &lt;/testSummaries&gt;
    &lt;/resource&gt;
  &lt;/resources&gt;
&lt;/all2allSummaries&gt;
</screen></para>
</listItem>
<listItem>
<para>
&lt;suite&gt; 
(from xslt.jsp "suiteName" parameter):
</para>
<para>
Array of report summaries for the suite.  This part of the XML is retrieved from the pre-defined depot query that takes a suite name 
and returns summaries for the latest series instance in that suite.
<screen>&lt;suite&gt;
 &lt;reportSummary&gt;
  &lt;hostname&gt;host1.name&lt;/hostname&gt;
  &lt;uri&gt;http://repository/globus.unit.xio&lt;/uri&gt;
  &lt;nickname&gt;gt4-xio&lt;/nickname&gt;
  &lt;seriesConfigId&gt;115446&lt;/seriesConfigId&gt;
  &lt;instanceId&gt;118115&lt;/instanceId&gt;
  &lt;gmt&gt;2006-11-16T23:49:49.000-08:00&lt;/gmt&gt;
  &lt;body/&gt;
 &lt;/reportSummary&gt;
 &lt;reportSummary&gt;
  &lt;hostname&gt;host2.name&lt;/hostname&gt;
  &lt;uri&gt;http://repository/globus.unit.xio&lt;/uri&gt;
  &lt;nickname&gt;gt4-xio&lt;/nickname&gt;
  &lt;seriesConfigId&gt;115466&lt;/seriesConfigId&gt;
  &lt;instanceId&gt;219103&lt;/instanceId&gt;
  &lt;gmt&gt;2006-12-15T01:31:53.000-08:00&lt;/gmt&gt;
  &lt;body&gt;
    &lt;unitTest&gt;
      &lt;ID&gt;xioTest&lt;/ID&gt;
    &lt;/unitTest&gt;
  &lt;/body&gt;
 &lt;/reportSummary&gt;
&lt;/suite&gt;
</screen></para>
</listItem>
<listItem>
<para>
&lt;resourceConfig&gt; 
(from xslt.jsp "resourceID" parameter):
</para>
<para>
Array of all resources within a given resource group and their macros. 
This part of the XML is retrieved from the agent.
<screen>&lt;resourceConfig&gt;
  &lt;resources&gt;
    &lt;resource&gt;
      &lt;name&gt;localResource&lt;/name&gt;
      &lt;macros&gt;
        &lt;macro&gt;
          &lt;name&gt;__regexp__&lt;/name&gt;
          &lt;value&gt;host.sitea.org&lt;/value&gt;
        &lt;/macro&gt;
      &lt;/macros&gt;
    &lt;/resource&gt;
  &lt;/resources&gt;
&lt;/resourceConfig&gt;
</screen></para>
</listItem>
<listItem>
<para>
extra xml 
(from xslt.jsp "xmlFile" parameter):
</para>
<para>
XML from the file passed as the xslt.jsp xmlFile parameter.  The default file is $INCA_DIST/etc/common/swStack.xml, but any XML file in the $INCA_DIST/etc/common directory can be passed as the xslt.jsp xmlFile parameter and it will automatically be picked up by the data consumer.  
<screen>&lt;stack&gt;
    &lt;id&gt;Software and Services&lt;/id&gt;
    &lt;category&gt;
        &lt;id&gt;Math Libraries&lt;/id&gt;
        &lt;package&gt;
            &lt;id&gt;globus&lt;/id&gt;
            &lt;version&gt;4.0.1&lt;/version&gt;
            &lt;tests&gt;
                &lt;version&gt;
			     &lt;id&gt;gt4-version&lt;/id&gt;
		       &lt;/version&gt;
                &lt;unitalias&gt;
			     &lt;id&gt;gt4-xio&lt;/id&gt;
		       &lt;/unitalias&gt;
                &lt;unitalias&gt;
			     &lt;id&gt;all2all:gram_to_localResource&lt;/id&gt;
		       &lt;/unitalias&gt;
            &lt;/tests&gt;
        &lt;/package&gt;
    &lt;/category&gt;
&lt;/stack&gt;
</screen></para>
</listItem>
</orderedList>

<para>
To change the XML to HTML transformation, either edit the default XSL stylesheet ($INCA_DIST/etc/default.xsl for the summary page or $INCA_DIST/etc/instance.xsl for the report detail pages), or pass another XSL file in the $INCA_DIST/etc directory as the xslt.jsp "xsl" parameter (e.g. $INCA_DIST/etc/swStack.xsl).  [ <ulink url="http://www.w3schools.com/xsl/">xsl tutorial</ulink> ] 
</para>
<para>
Change default CSS (Cascading Style Sheet) properties such as colors and fonts by editing the $INCA_DIST/var/jetty/webapp/css/inca.css file. [ <ulink url="http://www.w3schools.com/css/">css tutorial</ulink> ]
</para>
</section>

</section>
