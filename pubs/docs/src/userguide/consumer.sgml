<section id="userguide-consumer">
<title>Data Display (Data Consumers)</title>

<para>The data that the Inca depot stores, as with all database data, can be displayed in many ways.  A data consumer is anything that 
retrieves data from the depot and displays it (e.g. a JSP, sql query, CGI, etc.).</para>

<graphic fileref="figures/arch-consumer.jpg" align="center"></graphic>
<para>  Data consumers can query the Inca depot to produce current and historical reports and graphs 
or customized status information.  The Inca depot comes with two pre-defined queries: 
<orderedList>
<listItem>
<para>given instance and config IDs for a series, returns XML like the following (the results from executing
a reporter at a particular point in time)
<screen>&lt;reportDetails&gt; 
  &lt;suiteId&gt;1&lt;/suiteId&gt;
  &lt;seriesConfigId&gt;5&lt;/seriesConfigId&gt;
  &lt;seriesId&gt;5&lt;/seriesId&gt;
  &lt;reportId&gt;1&lt;/reportId&gt;
  &lt;instanceId&gt;73&lt;/instanceId&gt;
  &lt;seriesConfig&gt;
     ...    
    &lt;nickname&gt;java_hello_world&lt;/nickname&gt;     
     ...
  &lt;/seriesConfig&gt;
  &lt;report&gt;
     ...
  &lt;/report&gt;
  &lt;sysusage&gt;
     ...
  &lt;/sysusage&gt;
  &lt;stderr/&gt;
&lt;/reportDetails&gt;</screen>
</para>
</listItem>
<listItem>
<para>given a suite name, returns XML like the following (the latest report summaries for all of the series in the particular suite)
<screen>&lt;reportSummary&gt;
  &lt;hostname&gt;Computer.local&lt;/hostname&gt;
  &lt;uri&gt;http://repository/compiler.any.unit&lt;/uri&gt;
  &lt;nickname&gt;java_hello_world&lt;/nickname&gt;
  &lt;seriesConfigId&gt;5&lt;/seriesConfigId&gt;
  &lt;instanceId&gt;73&lt;/instanceId&gt;
  &lt;gmt&gt;2006-12-20T16:00:11.000-08:00&lt;/gmt&gt; 
  &lt;body&gt;
    &lt;package&gt;
      &lt;ID&gt;openssl&lt;/ID&gt;
      &lt;version&gt;0.9.7i&lt;/version&gt;
    &lt;/package&gt;  
  &lt;/body&gt;  
&lt;/reportSummary&gt;
&lt;reportSummary&gt;...&lt;/reportSummary&gt;
&lt;reportSummary&gt;...&lt;/reportSummary&gt;</screen>
</para>
</listItem>
</orderedList>
</para>
<section id="default-consumer">
<title>Default Data Consumer</title>
<para>
The default data consumer is a <ulink url="http://www.mortbay.org/">Jetty</ulink> deployed WAR file ($INCA_DIST/etc/inca-consumers.war) that contains a set of JSP pages along with their associated files and stylesheets.  Currently the WAR file cannot be deployed outside of the inca consumer server (e.g. in tomcat).  The WAR's index.jsp page (<ulink url="http://localhost:8080/index.jsp">http://localhost:8080/index.jsp</ulink>) allows its user to choose "suiteName" and "resourceID" parameters for a second JSP page called xslt.jsp.  The xslt.jsp script retrieves XML (partly from the second pre-defined query shown above) and formats it with an XSL stylesheet if the script is passed the name of a stylesheet as an input parameter. The default data consumer redirects to the xslt.jsp script and adds an input parameter with an XSL stylesheet so the result is formatted html (i.e. index.jsp redirects to something like <ulink url="http://localhost:8080/inca/xslt.jsp?suiteName=sampleSuite&amp;resourceID=defaultGrid&amp;xmlFile=swStack.xml&amp;xsl=default.xsl">http://localhost:8080/inca/xslt.jsp?suiteName=sampleSuite&amp;resourceID=defaultGrid&amp;xmlFile=swStack.xml&amp;xsl=default.xsl</ulink>).</para> 

<para>To view the XML that is retrieved and formatted by the xslt.jsp script, remove its XSL parameter.  For example, <ulink url="http://localhost:8080/inca/xslt.jsp?suiteName=sampleSuite&amp;resourceID=defaultGrid&amp;xmlFile=swStack.xml">http://localhost:8080/inca/xslt.jsp?suiteName=sampleSuite&amp;resourceID=defaultGrid&amp;xmlFile=swStack.xml</ulink> would produce something similar to: 
</para>
<orderedList>
<listItem>
<para>
&lt;all2allSummaries&gt;  
(cross-site test results calculated by the consumer): 
</para>
<para>
The default installation doesn't include cross-site tests; this section will be empty unless the Inca admin creates all2all series in incat.  Cross-site, or "all to all", tests determine whether all resources in a Grid can reach all other resources (e.g. via gsissh, gram, gridftp).  To be included in cross-site test calculation, a series must 
be assigned a nickname like "all2all:x_to_y" in incat.  Cross-site failures are calculated differently than regular failures.  For example, resource A will not be assigned a failure trying to reach resource B if all other resources trying to reach resource B also fail (i.e. there is a problem with resource B not resource A).  <xref linkend="userguide-incat-all2all"> describes how to configure all2all tests in incat.
<screen>&lt;all2allSummaries xmlns="http://inca.sdsc.edu/dataModel/all2all_2.0"&gt;
  &lt;resources xmlns=""&gt;
    &lt;resource&gt;
      &lt;name&gt;localResource&lt;/name&gt;
      &lt;testSummaries&gt;
        &lt;testSummary&gt;
          &lt;name&gt;gridftp&lt;/name&gt;
          &lt;numSuccesses&gt;15&lt;/numSuccesses&gt;
          &lt;numAtFaultFailures&gt;0&lt;/numAtFaultFailures&gt;
          &lt;numNotAtFaultFailures&gt;1&lt;/numNotAtFaultFailures&gt;
          &lt;failures/&gt;
        &lt;/testSummary&gt;
        &lt;testSummary&gt;
          &lt;name&gt;gram&lt;/name&gt;
          &lt;numSuccesses&gt;13&lt;/numSuccesses&gt;
          &lt;numAtFaultFailures&gt;1&lt;/numAtFaultFailures&gt;
          &lt;numNotAtFaultFailures&gt;0&lt;/numNotAtFaultFailures&gt;
          &lt;failures&gt;
            &lt;failure&gt;
              &lt;nickname&gt;all2all:gram_to_localResource&lt;/nickname&gt;
              &lt;instanceId&gt;239352&lt;/instanceId&gt;
              &lt;seriesConfigId&gt;172057&lt;/seriesConfigId&gt;
            &lt;/failure&gt;
          &lt;/failures&gt;
        &lt;/testSummary&gt;
      &lt;/testSummaries&gt;
    &lt;/resource&gt;
  &lt;/resources&gt;
&lt;/all2allSummaries&gt;
</screen></para>
</listItem>
<listItem>
<para>
&lt;suite&gt; 
(from xslt.jsp "suiteName" parameter):
</para>
<para>
Array of report summaries for the suite.  This part of the XML is retrieved from the pre-defined depot query that takes a suite name 
and returns summaries for the latest series instance in that suite.
<screen>&lt;suite&gt;
 &lt;reportSummary&gt;
  &lt;hostname&gt;host1.name&lt;/hostname&gt;
  &lt;uri&gt;http://repository/globus.unit.xio&lt;/uri&gt;
  &lt;nickname&gt;gt4-xio&lt;/nickname&gt;
  &lt;seriesConfigId&gt;115446&lt;/seriesConfigId&gt;
  &lt;instanceId&gt;118115&lt;/instanceId&gt;
  &lt;gmt&gt;2006-11-16T23:49:49.000-08:00&lt;/gmt&gt;
  &lt;body/&gt;
 &lt;/reportSummary&gt;
 &lt;reportSummary&gt;
  &lt;hostname&gt;host2.name&lt;/hostname&gt;
  &lt;uri&gt;http://repository/globus.unit.xio&lt;/uri&gt;
  &lt;nickname&gt;gt4-xio&lt;/nickname&gt;
  &lt;seriesConfigId&gt;115466&lt;/seriesConfigId&gt;
  &lt;instanceId&gt;219103&lt;/instanceId&gt;
  &lt;gmt&gt;2006-12-15T01:31:53.000-08:00&lt;/gmt&gt;
  &lt;body&gt;
    &lt;unitTest&gt;
      &lt;ID&gt;xioTest&lt;/ID&gt;
    &lt;/unitTest&gt;
  &lt;/body&gt;
 &lt;/reportSummary&gt;
&lt;/suite&gt;
</screen></para>
</listItem>
<listItem>
<para>
&lt;resourceConfig&gt; 
(from xslt.jsp "resourceID" parameter):
</para>
<para>
Array of all resources within a given resource group and their macros. 
This part of the XML is retrieved from the agent.
<screen>&lt;resourceConfig&gt;
  &lt;resources&gt;
    &lt;resource&gt;
      &lt;name&gt;localResource&lt;/name&gt;
      &lt;macros&gt;
        &lt;macro&gt;
          &lt;name&gt;__regexp__&lt;/name&gt;
          &lt;value&gt;host.sitea.org&lt;/value&gt;
        &lt;/macro&gt;
      &lt;/macros&gt;
    &lt;/resource&gt;
  &lt;/resources&gt;
&lt;/resourceConfig&gt;
</screen></para>
</listItem>
<listItem>
<para>
extra xml 
(from xslt.jsp "xmlFile" parameter):
</para>
<para>
XML from the file passed as the xslt.jsp xmlFile parameter.  The default file is $INCA_DIST/etc/common/swStack.xml, but any XML file in the $INCA_DIST/etc/common directory can be passed as the xslt.jsp xmlFile parameter and it will automatically be picked up by the data consumer.  
<screen>&lt;stack&gt;
  &lt;id&gt;Software and Services&lt;/id&gt;
  &lt;category&gt;
    &lt;id&gt;Math Libraries&lt;/id&gt;
    &lt;package&gt;
      &lt;id&gt;globus&lt;/id&gt;
      &lt;version&gt;4.0.1&lt;/version&gt;
      &lt;tests&gt;
        &lt;version&gt;
	  &lt;id&gt;gt4-version&lt;/id&gt;
	&lt;/version&gt;
        &lt;unitalias&gt;
	  &lt;id&gt;gt4-xio&lt;/id&gt;
	&lt;/unitalias&gt;
        &lt;unitalias&gt;
	  &lt;id&gt;all2all:gram_to_localResource&lt;/id&gt;
	&lt;/unitalias&gt;
      &lt;/tests&gt;
    &lt;/package&gt;
  &lt;/category&gt;
&lt;/stack&gt;
</screen></para>
</listItem>
</orderedList>

<para>
To change the XML to HTML transformation, either edit the default XSL stylesheet ($INCA_DIST/etc/default.xsl for the summary page or $INCA_DIST/etc/instance.xsl for the report detail pages), or pass another XSL file in the $INCA_DIST/etc directory as the xslt.jsp "xsl" parameter (e.g. $INCA_DIST/etc/swStack.xsl).  [ <ulink url="http://www.w3schools.com/xsl/">xsl tutorial</ulink> ] 
</para>
<para>
Change default CSS (Cascading Style Sheet) properties such as colors and fonts by editing the $INCA_DIST/var/jetty/webapp/css/inca.css file. [ <ulink url="http://www.w3schools.com/css/">css tutorial</ulink> ]
</para>
</section>

<section id="consumer-alt-location">
<title>Non-default Data Consumer Installation</title>
<para>You can install the data consumer in a non-default location (e.g. on a machine where the depot and agent are not running) if you: </para>
      <itemizedList>
        <listItem>
          <para>
            Copy the <filename>incaInstall.sh</filename> script to the machine where the consumer will run.
          </para>
          <screen>% wget http://inca.sdsc.edu/releases/&ugVersion/incaInstall.sh</screen>
        </listItem>
        <listItem>
          <para>
            Install consumer on the new machine:
          </para>
          <screen>% ./incaInstall.sh $INCA_DIST consumers</screen>
        </listItem>
        <listItem>
          <para>
            Copy the consumer key, certificate, and trusted directory from the machine where the agent/depot are running (orig.machine)
        to the new machine:
          </para>
          <screen>% scp <emphasis role="red">orig.machine:$ORIG_INCA_DIST</emphasis>/etc/consumerkey.pem $INCA_DIST/etc/; \
scp <emphasis role="red">orig.machine:$ORIG_INCA_DIST</emphasis>/etc/consumercert.pem $INCA_DIST/etc/;
scp "<emphasis role="red">orig.machine:$ORIG_INCA_DIST</emphasis>/etc/trusted/*" $INCA_DIST/etc/trusted/;</screen>
        </listItem>
        <listItem>
          <para>Edit the <filename>$INCA_DIST/etc/common/inca.properties</filename> local file and specify the full hostname 
	of the machine where the agent and depot are running:
            <screen>114 inca.consumer.agent=incas://<emphasis role="red">agent.hostname</emphasis>:6323
...
128 inca.consumer.depot=incas://<emphasis role="red">depot.hostname</emphasis>:6324</screen>
          </para>
        </listItem>
        <listItem> <para> Start the consumer component on the new machine: </para>
          <screen>% cd $INCA_DIST; ./bin/inca start consumer</screen>
        </listItem>
      </itemizedList>
</section>

<section id="consumer-port">
<title>Change port</title>
<para>
By default, the consumer is started on port 8080.  To change this, edit
the etc/jetty.xml file and search for 'SocketListener'.  To change the 
port to say 8085, change the following line:
</para>

<screen>
  &lt;Set name="Port"&gt;&lt;SystemProperty name="jetty.port" default="8080"/&gt;&lt;/Set&gt;
</screen>

<para>to: </para>

<screen>
  &lt;Set name="Port"&gt;8085&lt;/Set&gt;
</screen>

</section>

<section id="https-consumer">
<title>Enabling https</title>
<para>
By default, the consumer is configured as an http server.  To
disable http and enable https, edit the <filename>jetty.xml</filename> 
file in <filename>$INCA_DIST/etc</filename> and
<orderedList>
<listItem><para>
comment out the section "Add and configure a HTTP listener to port 8080"
</para></listItem>
<listItem><para>
uncomment the section "Add a HTTPS SSL listener on port 8443".
</para></listItem>
</orderedList>
</para><para>Note that the example below is to disable http and enable https.  
However, http and https can be enabled simultaneously if both sections are left uncommented.
</para>
<screen>
  &lt;!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --&gt;
  &lt;!-- Add and configure a HTTP listener to port 8080                  --&gt;
  &lt;!-- The default port can be changed using: java -Djetty.port=80     --&gt;
  &lt;!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --&gt;
  &lt;!-- 
  &lt;Call name="addListener"&gt;
    &lt;Arg&gt;
      &lt;New class="org.mortbay.http.SocketListener"&gt;
        &lt;Set name="Port"&gt;&lt;SystemProperty name="jetty.port"
default="8080"/&gt;&lt;/Set&gt;
  &lt;Set name="PoolName"&gt;P1&lt;/Set&gt;
        &lt;Set name="MinThreads"&gt;20&lt;/Set&gt;
        &lt;Set name="MaxThreads"&gt;200&lt;/Set&gt;
        &lt;Set name="lowResources"&gt;50&lt;/Set&gt;
        &lt;Set name="MaxIdleTimeMs"&gt;30000&lt;/Set&gt;
        &lt;Set name="LowResourcePersistTimeMs"&gt;2000&lt;/Set&gt;
        &lt;Set name="acceptQueueSize"&gt;0&lt;/Set&gt;
        &lt;Set name="ConfidentialPort"&gt;8443&lt;/Set&gt;
        &lt;Set name="IntegralPort"&gt;8443&lt;/Set&gt;
      &lt;/New&gt;
    &lt;/Arg&gt;
  &lt;/Call&gt;
  --&gt;


  &lt;!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --&gt;
  &lt;!-- Add a HTTPS SSL listener on port 8443                           --&gt;
  &lt;!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --&gt;
  &lt;Call name="addListener"&gt;
    &lt;Arg&gt;
      &lt;New class="org.mortbay.http.SslListener"&gt;
        &lt;Set name="Port"&gt;8443&lt;/Set&gt;
        &lt;Set name="PoolName"&gt;P1&lt;/Set&gt;
        &lt;Set name="MaxIdleTimeMs"&gt;30000&lt;/Set&gt;
        &lt;Set name="lowResources"&gt;30&lt;/Set&gt;
        &lt;Set name="LowResourcePersistTimeMs"&gt;2000&lt;/Set&gt;
        &lt;Set name="Keystore"&gt;etc/consumerKeystore&lt;/Set&gt;
        &lt;Set name="KeyPassword"&gt;OBF:1v8w1v2h1wg01z0d1z0h1wfy1v1x1v9q&lt;/Set&gt;
        &lt;Set name="Password"&gt;OBF:1v8w1v2h1wg01z0d1z0h1wfy1v1x1v9q&lt;/Set&gt;
        &lt;Set name="HttpHandler"&gt;
          &lt;New class="org.mortbay.http.handler.MsieSslHandler"&gt;
      &lt;Set name="UserAgentSubString"&gt;MSIE 5&lt;/Set&gt;
    &lt;/New&gt;
        &lt;/Set&gt;
      &lt;/New&gt;
    &lt;/Arg&gt;
  &lt;/Call&gt;
</screen>

<para>Then restart the consumer. </para> 

<screen>
% ./bin/inca stop consumer; ./bin/inca start consumer
</screen>

<para>The https server will be on port 8443.  </para>

<screen>https://<emphasis role="red">hostname</emphasis>:8443</screen>

<note><para>By default, the https server will use the credential stored in
<filename>$INCA_DIST/etc/consumerKeystore</filename>.  Its DN is 
"cn=Inca Consumer SSL, o=SDSC, l=San Diego, st=California, c=US".  If you'd 
like to generate a certificate with a different DN, run the keytool command as
follows:
</para>
</note>

<screen>% rm -f etc/consumerKeystore; keytool -keystore etc/consumerKeystore \
  -alias jetty -genkey -keyalg RSA -dname <emphasis role="red">your_DN</emphasis>
</screen>

<para>It will prompt you for a keystore password and a key password.  You can
either make them different or use the same one.  If you use the password
"consumer", no further changes are needed.  Otherwise, you will have to modify
&lt;Set name="KeyPassword"&gt; and &lt;Set name="Password"&gt; in the 
"Add a HTTPS SSL listener on port 8443" section in <filename>jetty.xml</filename>.
You can either put the password in there in plain text or obfuscate it using 
Jetty's password utility as follows:
</para>

<para id="jetty-password">
<screen>% java -classpath lib/org.mortbay.jetty-5.1.10.jar:lib/commons-logging-1.0.4.jar \
  org.mortbay.util.Password <emphasis role="red">your_password</emphasis>
</screen>
</para>

<para>It will output two lines such as follows:</para>

<screen>
OBF:1v8w1v2h1wg01z0d1z0h1wfy1v1x1v9q
MD5:1005b14bd29466723ace30d26f602f5b
</screen>

<para>Open <filename>etc/jetty.xml</filename> and replace the string beginning with OBF in both &lt;Set
name="KeyPassword"&gt; and &lt;Set name="Password"&gt; with the string 
provided by Jetty's password utility: 
</para>
<screen>
&lt;Set name="KeyPassword"&gt;OBF:1v8w1v2h1wg01z0d1z0h1wfy1v1x1v9q&lt;/Set&gt;
&lt;Set name="Password"&gt;OBF:1v8w1v2h1wg01z0d1z0h1wfy1v1x1v9q&lt;/Set&gt;
</screen>

</section>

<section id="password-consumer">
<title>Adding password protection</title>
<para>
By default, a password is not required for a user to access the status pages
served by the consumer.  To require a password, edit <filename>$INCA_DIST/etc/webdefault.xml</filename> 
and uncomment the section "Require password authentication
to access Inca status pages".  Note that there are two sections with that
title -- one for http and the other for https.  Uncomment the appropriate
section such as:
</para>

<screen>
  &lt;!-- ==================================================================== --&gt;
  &lt;!-- Require password authentication to access Inca status pages          --&gt;
  &lt;!--                        (http version)                                --&gt;
  &lt;!-- ==================================================================== --&gt;
  &lt;security-constraint&gt;
    &lt;web-resource-collection&gt;
      &lt;web-resource-name&gt;Any User&lt;/web-resource-name&gt;
      &lt;url-pattern&gt;/*&lt;/url-pattern&gt; 
    &lt;/web-resource-collection&gt;
    &lt;auth-constraint&gt;
      &lt;role-name&gt;*&lt;/role-name&gt; 
    &lt;/auth-constraint&gt;
  &lt;/security-constraint&gt;
 
  &lt;login-config&gt;
    &lt;auth-method&gt;BASIC&lt;/auth-method&gt;
    &lt;realm-name&gt;Inca Status Pages&lt;/realm-name&gt;
  &lt;/login-config&gt;
</screen>

<para>By default, the username and password for the pages will be "inca".  To
change this, edit <filename>$INCA_DIST/etc/realm.properties</filename> and customize the 
username and password for your installation.  If you do not want to store the
password in plain text, use Jetty's password utility described in <xref
linkend="https-consumer">.</para>
  
<para>Then restart the consumer. </para> 

<screen>% ./bin/inca stop consumer; ./bin/inca start consumer</screen>

<para>The next time you view the status pages, you should see a login like:</para>

<graphic fileref="figures/ug-consumer-password.png" align="center"></graphic>

</section>

</section>
