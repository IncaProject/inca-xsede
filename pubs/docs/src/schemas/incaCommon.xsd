<?xml version = "1.0" encoding = "UTF-8"?>
<!--Generated by Turbo XML 2.3.1.100. Conforms to w3c http://www.w3.org/2001/XMLSchema-->
<schema xmlns = "http://www.w3.org/2001/XMLSchema"
        targetNamespace = "http://inca.sdsc.edu/dataModel/util_2.0"
        xmlns:inca = "http://inca.sdsc.edu/dataModel/util_2.0"
        xmlns:xsd = "http://www.w3.org/2001/XMLSchema"
        elementFormDefault = "unqualified">

	<complexType name = "report">
		<sequence>
			<element name = "gmt" type = "dateTime"/>
			<element name = "hostname" type = "string"/>
			<element name = "name" type = "string"/>
			<element name = "version" type = "string"/>
			<element name = "args" type = "inca:args"/>
			<element name = "log" minOccurs = "0">
				<complexType>
					<sequence>
						<element name = "debug" type = "inca:logEntry" minOccurs = "0" maxOccurs = "unbounded"/>
						<element name = "error" type = "inca:logEntry" minOccurs = "0" maxOccurs = "unbounded"/>
						<element name = "info" type = "inca:logEntry" minOccurs = "0" maxOccurs = "unbounded"/>
						<element name = "system" type = "inca:logEntry" minOccurs = "0" maxOccurs = "unbounded"/>
						<element name = "warn" type = "inca:logEntry" minOccurs = "0" maxOccurs = "unbounded"/>
					</sequence>
				</complexType>
			</element>
			<element name = "body" type = "inca:body"/>
			<element name = "exitStatus" type = "inca:exitStatus"/>
			<element name = "help" minOccurs = "0">
				<complexType>
					<sequence>
						<element name = "name" type = "string"/>
						<element name = "version" type = "string"/>
						<element name = "description" type = "string"/>
						<element name = "url" type = "string"/>
						<element name = "argDescription" minOccurs = "0" maxOccurs = "unbounded">
							<complexType>
								<sequence>
									<element name = "ID" type = "string"/>
									<element name = "accepted" type = "string"/>
									<element name = "description" type = "string"/>
									<element name = "default" type = "string"/>
								</sequence>
							</complexType>
						</element>
						<element name = "dependency" minOccurs = "0" maxOccurs = "unbounded">
							<complexType>
								<sequence>
									<element name = "ID" type = "string"/>
								</sequence>
							</complexType>
						</element>
					</sequence>
				</complexType>
			</element>
		</sequence>
	</complexType>

  <!-- reportSeries is a generic definition of the same concept from the depot.
       it describes all the necessary information that will make a series
       unique in the database with one exception.  We leave out the url of the
       machine that it is being executed on.   or actually we make it optional.
       If a document arrives at the depot with this info missing there will be
       an error -->
  <complexType name = "reportSeries">
    <sequence>
      <choice>
        <element name = "uri" type = "anyURI"/>
        <element name = "name" type = "string"/>
      </choice>
      <element name = "args" type = "inca:args" minOccurs = "0"/>
      <element name = "timeout" type = "inca:timeout" minOccurs = "0"/>
      <element name = "setup" type = "string" minOccurs = "0"/>
      <element name = "cleanup" type = "string" minOccurs = "0"/>
      <element name = "nice" type = "integer" minOccurs = "0"/>
      <element name = "description" type = "string" minOccurs = "0"/>
      <element name = "hostname" type = "string" minOccurs = "0"/>
    </sequence>
  </complexType>
  
  <!-- args describes the input parameters to a reporter -->
  <complexType name = "args">
    <sequence>
      <element name = "arg" minOccurs = "0" maxOccurs = "unbounded">
        <complexType>
          <sequence>
            <element name = "name" type = "string"/>
            <element name = "value" type = "string"/>
          </sequence>
        </complexType>
      </element>
    </sequence>
  </complexType>
  
  <!-- timeout is used to express the ways that the reporter manager monitors
       the reporters' resource usage -->
  <complexType name = "timeout">
    <sequence>
      <element name = "wallClockTime" type = "integer" minOccurs = "0"/>
      <element name = "memory" type = "integer" minOccurs = "0"/>
      <element name = "cpuTime" type = "integer" minOccurs = "0"/>
    </sequence>
  </complexType>
  
  <!-- logEntry type is used by the report -->
  <complexType name = "logEntry">
    <sequence>
      <element name = "gmt" type = "dateTime"/>
      <element name = "message" type = "string"/>
    </sequence>
  </complexType>
  
  <!-- schedule describes to the RM how often to run a reporter.  Currently we
       only support cron scheduling; the absence of a cron indicates that a
       series should be run once, immediately. -->
  <complexType name = "schedule">
    <sequence>
      <element name = "cron" type = "inca:cron" minOccurs = "0"/>
    </sequence>
  </complexType>
  <complexType name = "cron">
    <sequence>
      <element name = "min" type = "string"/>
      <element name = "hour" type = "string"/>
      <element name = "mday" type = "string"/>
      <element name = "wday" type = "string"/>
      <element name = "month" type = "string"/>
      <element name = "numOccurs" type = "integer" minOccurs = "0"/>
      <element name = "suspended" type = "boolean" minOccurs = "0"/>
    </sequence>
  </complexType>
  
  <!-- acceptedOutput (perhaps better named acceptableOutput) describes the
       "correct" output from a reporter and what to do on mismatch -->
  <complexType name = "acceptedOutput">
    <sequence>
      <element name = "comparitor" type = "string" minOccurs = "0"/>
      <element name = "body" type = "inca:body" minOccurs = "0"/>
      <element name = "errorMessage" type = "string" minOccurs = "0"/>
      <element name = "completed" type = "boolean" minOccurs = "0"/>
      <element name = "notification" type = "inca:notification" minOccurs = "0"/>
    </sequence>
  </complexType>
  <complexType name = "notification">
    <sequence>
      <element name = "email" type = "string"/>
      <element name = "condition" type = "string"/>
    </sequence>
  </complexType>

  <!-- report body, flexible definition that allows any content -->
  <complexType name = "body">
    <sequence>
      <any namespace = "##any" processContents = "skip" minOccurs = "0" maxOccurs = "unbounded"/>
    </sequence>
  </complexType>
  <complexType name = "exitStatus">
    <sequence>
      <element name = "completed" type = "boolean"/>
      <element name = "errorMessage" type = "string" minOccurs = "0"/>
    </sequence>
  </complexType>
  
  <!-- descriptions of single resource/named resource groups and the macro
       definitions that apply to each -->
  <complexType name = "resources">
    <sequence>
      <element name = "resource" type = "inca:resource" minOccurs = "0" maxOccurs = "unbounded"/>
    </sequence>
  </complexType>
  <complexType name = "resource">
    <sequence>
      <element name = "name" type = "string"/>
      <element name = "xpath" type = "string" minOccurs = "0"/>
      <element name = "macros" type = "inca:macros" minOccurs = "0">
        <unique name = "macro">
          <selector xpath = "macro"/>
          <field xpath = "name"/>
        </unique>
      </element>
    </sequence>
  </complexType>
  <complexType name = "macros">
    <sequence>
      <element name = "macro" type = "inca:macro" minOccurs = "0" maxOccurs = "unbounded"/>
    </sequence>
  </complexType>
  <complexType name = "macro">
    <sequence>
      <element name = "name" type = "string"/>
      <element name = "value" type = "string" maxOccurs = "unbounded"/>
    </sequence>
  </complexType>

  <!-- a list of hostnames in a suite -->
  <complexType name = "hostnames">
    <sequence>
      <element name = "hostname" type = "string" minOccurs = "0" maxOccurs = "unbounded"/>
    </sequence>
  </complexType>

  <!-- actions taken when modifying the resourceSetConfigs in a suite -->
  <simpleType name = "action">
    <restriction base = "token">
      <pattern value = "add|delete|none"/>
    </restriction>
  </simpleType>

</schema>
