#!/usr/bin/perl

use strict;
use warnings;


my $PRETTY_PRINT = "java -cp lib/saxon-*.jar net.sf.saxon.Query -s:- -qs:/ '!indent=yes'";
my @OUTER_TAGS = ( "services", "software", "resources", "xdcdb" );
my @URLS = ( "https://info.xsede.org/wh1/glue2-views-api/v1/services/", "https://info.xsede.org/wh1/glue2-views-api/v1/software/", "https://info.xsede.org/wh1/rdr-db/v1/rdr-xup/", "https://info.xsede.org/wh1/xdcdb/v1/xdcdb/" );

sub readInfoFile {
  my $write = shift;
  my $url = shift;
  my $outer_tag = shift;

  my $xml = "xsede-info.xml.$$";
  `curl -H "Accept: application/xml" $url 2> /dev/null | $PRETTY_PRINT > $xml`;
  open( READ, "<$xml" );
  my ($resource, $kit);
  print $write "  <$outer_tag>\n";
  while( <READ> ) {
    next if /<\/?root>/;
    next if /<?xml/;
    my $line = $_;
    print $write $line;
  }
  print $write "  </$outer_tag>\n";
  close READ;
  unlink $xml;
}

my $write;
open( $write, ">xsede-info.xml" );
print $write "<information-warehouse>\n";
for( my $i = 0; $i < scalar(@URLS); $i++ ) {
  print "$URLS[$i]\n";
  readInfoFile($write, $URLS[$i], $OUTER_TAGS[$i]);
}
print $write "</information-warehouse>\n";
close $write;

my $url = "https://info.xsede.org/wh1/xcsr-db/v1/componentsprequirement/";
open( $write, ">componentsprequirement.xml" );
readInfoFile($write, $url, "requirements");
close $write;
