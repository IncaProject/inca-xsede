<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook V3.1//EN">

<article>
    <title id="top">
        Inca 2.0 Installation Guide
    </title>

    <section id="intro-overview">
        <title>Introduction</title>
        <para>
            The Inca Test Harness and Reporting Framework (Inca) is a generic
            framework for the automated testing, benchmarking and monitoring of Grid resources.
            Inca provides the scheduled execution of information gathering scripts (reporters)
            and collects, archives, and publishes the data resulting from these scripts.
        </para>
        <para>
            Inca is composed of five main components:
            <orderedlist>
                <listitem>
                    <para>
                        <emphasis role="strong">Reporter</emphasis> - script or executable that performs
                        a test, benchmark, or query and formats its results in Inca compliant XML.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis role="strong">Reporter Repository</emphasis> - a trusted authority that hosts
                        a directory of reporters and reporter libraries that can be fetched
                        from a reporter agent and used in an Inca deployment to collect data from
                        resources.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis role="strong">Reporter Manager</emphasis> - a thin client of the control
                        framework of Inca which executes on the monitored resources.  It handles
                        scheduled and local-execution of reporters and stores the resulting data
                        into a depot.  A reporter manager trusts one and only one reporter agent who
                        it registers with and accepts control changes from.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis role="strong">Reporter Agent</emphasis> - services requests for the
                        collection of specified data sets at various intervals and
                        configures data storage requirements.  The data set is collected by
                        delegating the execution of a corresponding reporter suite to a
                        set of reporter managers.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis role="strong">Depot</emphasis> - stores reporter data collected by
                        the reporter managers and handles all data queries.
                    </para>
                </listitem>
            </orderedlist>
        </para>
        <para>
            Inca's data is displayed by data consumers (e.g. Web scripts, command line scripts, or Java GUIs)
            that query the depot for data.  The Inca software is administered via a Java GUI called the 
	    Inca Administration Tool (incat).
        </para>
        <figure id="arch.fig">
            <title>Inca architecture</title>
            <graphic fileref="figures/arch.jpg" align="center">
            </graphic>
        </figure>
        <para>[ <link linkend="top">top of page</link> ]</para>
    </section>


    <section id="install">
        <title>Get Inca</title>
        <para>
            This section describes how to install Inca....
        </para>

        <section id="prereq">
            <title>Prerequisites</title>
            <para>
                <orderedlist>
                    <listitem>
                        <para>
                            JDK 1.4.2 or later
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            Perl 5.8.6 or later
                        </para></listitem>
                </orderedlist>
            </para>
            <para>[ <link linkend="top">top of page</link> ]</para>
        </section>
        <section id="recommend">
            <title>Recommendations</title>
            <para>
                We recommend that Inca be run under a regular user account and not as root for the following reasons:
            </para>
            <itemizedList>
                <listItem>
                    <para>
                        To best detect user-level problems, it is best that Inca run as a regular
                        use account with the default environment setup.
                    </para>
                </listItem>
                <listItem>
                    <para>
                        Inca does not require any special privileges to run.
                    </para>
                </listItem>
            </itemizedList>
            <para>
                Furthermore, we recommend that a valid GSI credential be obtained for this regular user
                account so that Grid tests requiring proxy certificates can be executed. Please request a
                GSI credential from your virtual organization's Certificate Authority (CA) and consult your
                organization's security policy regarding GSI credential use.  Note that because Inca is
                an automated system, it will need continual access to valid proxy
                credentials on each resource for certain tests.
            </para>
            <note>
                <para>
                    <emphasis> The following sections assume that you are installing
                        Inca under a regular user account called inca. </emphasis>
                </para>
            </note>
            <para>[ <link linkend="top">top of page</link> ]</para>
        </section>
        <section id="install-source">
            <title>Build and Install Source Code</title>
            <para>
                Download a tarball distribution of Inca, e.g., inca-x.x.tar.gz, from
                <ulink url="http://inca.sdsc.edu/downloads.html">the Inca download page</ulink>
                and unpack the code, as follows:
            </para>
            <para>
                <userInput>
                    tar zxvf inca-x.x.tar.gz
                </userInput>
            </para>
            <para>
                The code will be available in a directory called inca-x.x.
            </para>
            <para>
                Change to the top level directory of your local copy of the Inca
                source code.
            </para>
            <para>
                <userInput>
                    cd inca-x.x
                </userInput>
            </para>
            <para>
                To build and install Inca, type
            </para>
            <para>
                <userInput>
                    ./install.sh
                </userInput>
            </para>
            <para>[ <link linkend="top">top of page</link> ]</para>
        </section>
    </section>


    <section id="start-inca">
        <title>Start Inca Components</title>
        <para>
            A component startup script is located in the bin directory under your installation
            directory.  Add this bin directory to your $PATH and then:
        </para>
        <orderedList>
            <listItem>
                <para>start the depot</para>
                <screen>% inca depot &</screen>
            </listItem>
            <listItem>
                <para>start the reporter agent</para>
                <screen>% inca agent &</screen>
            </listItem>
            <listItem>
                <para>start incat</para>
                <screen>% inca incat &</screen>
            </listItem>
        </orderedList>
        <para>[ <link linkend="top">top of page</link> ]</para>
    </section>


    <section id="incat">
        <title>Configure Inca Components</title>
        <section id="incat-intro">
            <title>The Inca Administration Tool</title>
            <para>
                The Inca Administration Tool, or <emphasis role="strong">incat</emphasis>,
                is designed to make the installation, setup, data collection, and maintenance
                of the Inca deployment straightforward and configurable.
                An administrator can use <emphasis role="strong">incat</emphasis> to configure:
                <itemizedList>
                    <listItem>
                        <para>
                            reporter repositories
                        </para>
                    </listItem>
                    <listItem>
                        <para>
                            resource information
                        </para>
                    </listItem>
                    <listItem>
                        <para>
                            reporter execution
                        </para>
                    </listItem>
                </itemizedList>
            </para>
            <para>
                <emphasis role="strong">incat</emphasis> is the client interface to a reporter agent.  All
                information required to configure an Inca installation is stored on the
                reporter agent and is retrieved by <emphasis role="strong">incat</emphasis> as needed.
            </para>
            <para>
                The Inca administrator first uses <emphasis role="strong">incat</emphasis> to specify which reporter
                repositories serve as the source of an installation's reporters.  <emphasis role="strong">incat</emphasis>
                forwards this reporter repository list to the reporter agent,
                where the agent retrieves and merges catalog information from each reporter repository and
                returns it to <emphasis role="strong">incat</emphasis> as a complete list of available reporters.
                The administrator then selects a set of reporters to run on
                an installation's resources, specifying execution attributes for each reporter on each resource.
                <emphasis role="strong">incat</emphasis> returns this information to the reporter agent, which uses it to
                download reporters from the reporter repositories and construct schedules
                for transmission to the reporter managers.
            </para>
            <note>
                <para>
                    <emphasis>Remember to commit your changes before quitting <emphasis role="strong">incat</emphasis> 
			so that they are stored on the agent. </emphasis>
                </para>
            </note>
            <section id="incat-RR">
                <title>Configure Reporter Repositories</title>
                <para>
                    A <emphasis>reporter repository</emphasis> is a trusted authority that hosts
                    a directory of reporters and reporter libraries that can be fetched
                    from a reporter agent and used in an Inca deployment to collect data from resources.
                </para>
                <para>
                    Although <emphasis role="strong">incat</emphasis> is preconfigured to use a
                    standard reporter repository (http://inca.sdsc.edu/2.0/repository),
                    Inca also offers a convenience tool
                    (called <emphasis role="strong">incpack</emphasis>) for producing or
                    updating a catalog for an Inca reporter repository.
                    <emphasis role="strong">incpack</emphasis> creates local
                    reporter repositories which may be specified to the
                    reporter agent as sources for reporter packages.
		</para>
		<para>
            		The <emphasis role="strong">incpack</emphasis> script is 
			located in the bin directory under your installation
            		directory.  Add this bin directory to your $PATH and then:
        	</para>
                <screen>% cd /path/to/repository; incpack /path/to/repository/*</screen>
                <para>
			There should now be a file called "Packages.gz" in the repository directory 
			with information about the reporters in your new repository.
                </para>
                <para>
			Once a repository has been created, <emphasis role="strong">incpack</emphasis> needs to 
			be rerun if any of its reporters are changed, added or deleted.  
			Remove "Packages.gz" before rerunning <emphasis role="strong">incpack</emphasis>:
                </para>
                <screen>% cd /path/to/repository; rm Packages.gz; incpack /path/to/repository/*</screen>
                <para>
                    	Via <emphasis role="strong">incat</emphasis>, the Inca administrator tells
                    	the reporter agent which repositories to retrieve reporters from by entering
			the location of the "Packages.gz" file. If the repository
		  	is located in a Web accessible directory, its location can be entered as
			"http://webserver/path/to/repository" (see <xref linkend="repository.fig">).  
			If the repository is local, it can be entered
			as "file:///path/to/repository".	
                </para>

                <figure id="repository.fig">
                    <title>Reporter Repositories Screen</title>
                    <graphic fileref="figures/incat_repositories.jpg" align="center"></graphic>
                </figure>
                <para>[ <link linkend="top">top of page</link> ]</para>
            </section>
            <section id="incat-resources">
                <title>Configure Resources</title>
                <para>
                    	Grid nodes are grouped into virtual resource groups and the groups are assigned macros 
			(variables that have one or more values).  Groups/macros are then used to configure 
			how reporters will run on the nodes.  
                </para>
                <para>
			<xref linkend="resources.fig"> illustrates the resource configuration screen in 
                    	<emphasis role="strong">incat</emphasis>.  The first window shows the resource group
			name(s), the second window shows the members that belong to the resource group 
			selected in the first window, and the third window shows the macros that are assigned
			to the resource group selected in the first window.
                </para>
                <figure id="resources.fig">
                    <title>Resource Configuration Screen</title>
                    <graphic fileref="figures/incat_resource_config.jpg" align="center"></graphic>
                </figure>
                <para>
			When adding a new resource group, members can be either hostnames or
			other resource group names and are entered as a regular expression.  For example, in 
			<xref linkend="rg1.fig"> a new group called "teragrid" is being added that contains groups 
			called "ncsa-ia64", "sdsc-ia64", and "anl-viz".  The regular expression for those three groups is
			"(ncsa|sdsc)-ia64|anl-viz".
		</para>
		<para>
			In <xref linkend="rg1.fig">, the access method 
			(gram and gridftp servers) is defined with macros. The gram server for the "teragrid" group is @GRAM_SERVER@, which 
			means that it will look for the GRAM_SERVER macro value to be defined in 
			each of its subgroups (sdsc-ia64, etc.) and will use the subgroup value for the subgroup nodes.  The 
			the Inca reporter manager will then be started to execute reporters on the gram server.  Reporters will be 
			transferred to the reporter manager via the gridftp server.
                </para>
                <figure id="rg1.fig">
                    <title>Add Resource Group (with subgroups) Screen</title>
                    <graphic fileref="figures/incat_add_rg1.jpg" align="center"></graphic>
                </figure>
                <para>
			The Inca reporter manager runs on one login node of a cluster.  In the case where login nodes round robin, 
			a resource group should be created for the cluster and the "Round Robin" box should be checked (see 
			<xref linkend="rg2.fig">).
                </para>
                <figure id="rg2.fig">
                    <title>Add Resource Group (with round robin cluster) Screen</title>
                    <graphic fileref="figures/incat_add_rg2.jpg" align="center"></graphic>
                </figure>
		<para>
                    	A node gets its macros from the group closest to it.  If a node, like tg-login.ncsa.teragrid.org, is listed 
			in the ncsa-ia64 group, and the ncsa-ia64 group is listed in the teragrid group, then the ncsa-ia64 group is
			closer to the tg-login.ncsa.teragrid.org node than the teragrid group.  
		</para>
		<para>
			When adding macros with more than one value to a resource group (see <xref linkend="rg1.fig">), separate 
			the values with spaces (e.g. value1 value2).  Macro values that have spaces in them should 
			always be quoted (e.g. "value 1").  Macros can include other macros by surrounding them with the @ symbol (see 
			the gram server macro in <xref linkend="rg1.fig">).  
		</para>
                <figure id="macro.fig">
                    <title>Add Macro Screen</title>
                    <graphic fileref="figures/incat_add_macro.jpg" align="center"></graphic>
                </figure>
                <para>[ <link linkend="top">top of page</link> ]</para>
            </section>
            <section id="incat-suites">
                <title>Configure Reporter Execution</title>
                <para>
                    	A reporter along with its arguments (input parameters), the resource group it runs on, and constraints (setup to be 
			performed before executing the reporter, cleanup to be performed after executing the reporter,  
			frequency of execution, maximum resource usage, and expected output) make up a <emphasis>reporter series</emphasis>. 
			Reporter series are grouped into sets called <emphasis>reporter suites</emphasis>.
                </para>
                <para>
			<xref linkend="suites.fig"> shows <emphasis role="strong">incat</emphasis>'s suite configuration screen.  To configure
			reporter execution, first create a new suite and then add reporter series to the suite.
                </para>
                <figure id="suites.fig">
                    <title>Suites Screen</title>
                    <graphic fileref="figures/incat_suite_config.jpg" align="center"></graphic>
                </figure>
                <para>
			A new reporter series is being added in <xref linkend="series.fig">.  Note that the description field 
			becomes the series name in the suite.
                </para>
                <figure id="series.fig">
                    <title>Add Series Screen</title>
                    <graphic fileref="figures/incat_add_series.jpg" align="center"></graphic>
                </figure>
                <para>[ <link linkend="top">top of page</link> ]</para>
            </section>
        </section>
    </section>


    <section id="verify">
        <title>Verify Inca Components</title>
        <para>
            This section describes how to verify that an installation of Inca is
            working...
        </para>
        <para>[ <link linkend="top">top of page</link> ]</para>
    </section>


    <section id="data-consumer">
        <title>Display Data</title>
        <para>
            The data collected by Inca can be displayed by data consumers (e.g. Web scripts, command line scripts, or Java GUIs)
            that query the depot for data.  A data consumer for displaying software
            stack reporter suite data is provided in the 2.0 release of Inca.  The following steps describe the
            configuration of the sample data consumer, a jsp script called <filename>xslt.jsp</filename>. 
        </para>
        <section id="setup-web">
            <title>Start Jetty</title>
            <para>
                Inca uses Jetty, a Java HTTP server and servlet container, to run its jsp data consumer.  Jetty starts on port 8080 by 
		default, but can be configured to start on another port.  A separate Web server (like Apache)
		is not required.  To start Jetty:
            </para>
                <screen>% ant war; whatever jetty commands we need</screen>
            <para>
		More information about Jetty is available at the <ulink url="http://jetty.mortbay.org/jetty/">Jetty homepage</ulink>.
            </para>
            <para>[ <link linkend="top">top of page</link> ]</para>
        </section>
        <section id="run-stack">
            <title>View Software Stack Data Consumer</title>
            	<para>
			The results from the sample suite that executed when the depot and agent were started should now be visible from 
			the xslt.jsp page.  The jsp requires three input parameters to display either suite results or a series results.  	
		</para>
		<para> 
		For a suite (see <xref linkend="summary.fig">) the jsp requires:
		<orderedList>
			<listItem>
				<para> 
				a suiteGUID: the name of the suite from <emphasis role="strong">incat</emphasis>
				</para> 
			</listItem>
			<listItem>
				<para> 
      				a resourceID (e.g. "teragrid"): the resource group name from <emphasis role="strong">incat</emphasis>
				</para> 
			</listItem>
			<listItem>
				<para> 
      				the path to the xsl to display the suite xml results (an example xsl file called 
				swStack.xsl is provided)
				</para> 
			</listItem>
		</orderedList>	
		</para>
		<para>
			The URL to display the sample suite results is:
		</para>
		<screen>http://localhost:8080/xslt.jsp?xsl=swStack.xsl&amp;resourceID=your_resource_group&amp;suiteGUID=your_suite_name</screen>
		<figure id="summary.fig">
                <title>Software Stack Summary Page</title>
                <graphic fileref="figures/consumer_reporter_summary.jpg" align="center">
                </graphic>
            </figure>
		<para> 
		For a series (see <xref linkend="details.fig">) the jsp requires:
		<orderedList>
			<listItem>
				<para> 
				an instanceID: the series instanceID 
				</para> 
			</listItem>
			<listItem>
				<para> 
      				a configID: the series configID
				</para> 
			</listItem>
			<listItem>
				<para> 
      				the path to the xsl to display the test xml results (an example xsl file called 
				swStack.xsl is provided)
				</para> 
			</listItem>
		</orderedList>	
		</para>
		<para>
			Individual series results are linked from the suite results page with URLs like:
		</para>
            <screen>http://localhost:8080/xslt.jsp?xsl=swStack.xsl&amp;instanceID=24&amp;configID=1</screen>
            <figure id="details.fig">
                <title>Software Stack Details Page</title>
                <graphic fileref="figures/consumer_reporter_details.jpg" align="center">
                </graphic>
            </figure>
            <para>[ <link linkend="top">top of page</link> ]</para>
        </section>
    </section>


    <section id="contact-us">
        <title>Troubleshoot</title>
        <para>
            Please email <email>inca@sdsc.edu</email> with any questions or problems using Inca software.
        </para>
        <para>[ <link linkend="top">top of page</link> ]</para>
    </section>


</article>
