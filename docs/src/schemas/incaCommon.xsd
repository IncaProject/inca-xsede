<?xml version = "1.0" encoding = "UTF-8"?>
<!--Generated by Turbo XML 2.3.1.100. Conforms to w3c http://www.w3.org/2001/XMLSchema-->
<schema xmlns = "http://www.w3.org/2001/XMLSchema"
	targetNamespace = "http://inca.sdsc.edu/dataModel/util_2.0"
	xmlns:inca = "http://inca.sdsc.edu/dataModel/util_2.0"
	xmlns:xsd = "http://www.w3.org/2001/XMLSchema"
	elementFormDefault = "unqualified">
	<!-- a reporter series is a generic defition of the same concept from the
	depot.  it describes all the necessary information that will make a series
	unique in the database with one exception.  We leave out the url of the
	machine that it is being executed on.   or actually we make it optional.
	If a document arrives at the depot with this info missing there will be
	an error -->
	
	<complexType name = "reportSeries">
		<sequence>
			<element name = "uri" type = "anyURI"/>
			<element name = "args" type = "inca:args" minOccurs = "0"/>
			<element name = "timeout" type = "inca:timeout" minOccurs = "0"/>
			<element name = "setup" type = "string" minOccurs = "0"/>
			<element name = "cleanup" type = "string" minOccurs = "0"/>
			<element name = "hostname" type = "string" minOccurs = "0"/>
		</sequence>
	</complexType>
	
	<!-- inputs describe the input parameters to a reporter -->
	
	<complexType name = "args">
		<sequence>
			<element name = "arg" maxOccurs = "unbounded">
				<complexType>
					<sequence>
						<element name = "name" type = "string"/>
						<element name = "value" type = "string"/>
					</sequence>
				</complexType>
			</element>
		</sequence>
	</complexType>
	
	<!-- timout is used to express the ways that the reporter manager monitors the reporters -->
	
	<complexType name = "timeout">
		<sequence>
			<element name = "wallClockTime" type = "integer" minOccurs = "0"/>
			<element name = "memory" type = "integer" minOccurs = "0"/>
			<element name = "cpuTime" type = "integer" minOccurs = "0"/>
		</sequence>
	</complexType>
	
	<!-- log type is used by the report -->
	
	<complexType name = "logEntry">
		<sequence>
			<element name = "gmt" type = "dateTime"/>
			<element name = "message" type = "string"/>
		</sequence>
	</complexType>
	
	<!-- A schedule describes to the RM how often to run a reporter -->
	
	<complexType name = "schedule">
		<sequence>
			<element name = "cron" type = "inca:cron"/>
		</sequence>
	</complexType>
	<complexType name = "cron">
		<sequence>
			<element name = "min" type = "string"/>
			<element name = "hour" type = "string"/>
			<element name = "mday" type = "string"/>
			<element name = "wday" type = "string"/>
			<element name = "month" type = "string"/>
			<element name = "numOccurs" type = "integer" minOccurs = "0"/>
		</sequence>
	</complexType>
	
	<!-- a resource set is used to describe a set or resources - this can be done by a list of hostnames or
	it can be done by using xpath on the configuration files -->
	
	<complexType name = "resourceSet">
		<sequence>
			<element name = "name" type = "string"/>
			<choice>
				<element name = "xpath" type = "string"/>
				<element name = "hostname" type = "string" maxOccurs = "unbounded"/>
			</choice>
		</sequence>
	</complexType>
	<complexType name = "acceptedOutput">
		<sequence>
			<element name = "body" type = "inca:body" minOccurs = "0"/>
			<element name = "errorMessage" type = "string" minOccurs = "0"/>
			<element name = "completed" type = "boolean" minOccurs = "0"/>
		</sequence>
	</complexType>
	<complexType name = "body">
		<sequence>
			<any namespace = "##any" processContents = "skip" minOccurs = "0" maxOccurs = "unbounded"/>
		</sequence>
	</complexType>
	<complexType name = "exitStatus">
		<sequence>
			<element name = "completed" type = "boolean"/>
			<element name = "errorMessage" type = "string" minOccurs = "0"/>
		</sequence>
	</complexType>
	
	<!-- type used by grid config -->
	
	<complexType name = "resource">
		<sequence>
			<element name = "name" type = "string"/>
			<element name = "resources" type = "inca:resources" minOccurs = "0"/>
			<element name = "macros" type = "inca:macros" minOccurs = "0"/>
		</sequence>
	</complexType>
	<complexType name = "macros">
		<sequence>
			<element name = "macro" type = "inca:macro" maxOccurs = "unbounded"/>
		</sequence>
	</complexType>
	<complexType name = "macro">
		<sequence>
			<element name = "name" type = "string"/>
			<element name = "value" type = "string" maxOccurs = "unbounded"/>
		</sequence>
	</complexType>
	<complexType name = "resources">
		<sequence>
			<element name = "resource" type = "inca:resource" maxOccurs = "unbounded"/>
		</sequence>
	</complexType>
	<simpleType name = "action">
		<restriction base = "token">
			<pattern value = "add|delete|suspend|unsuspend"/>
		</restriction>
	</simpleType>
</schema>
