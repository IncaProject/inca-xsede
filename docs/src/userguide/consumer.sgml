<section id="userguide-consumer">
  <title>Data Display (Data Consumers)</title>

  <para>
  The data that the Inca depot stores can be displayed in many ways, such as
  current status reports, historical graphs, and customized status information.
  An Inca data consumer is anything that
  retrieves data from the depot and displays it (e.g. a JSP, SQL query, CGI,
  etc.).  The Inca depot provides access to stored data via Perl and Java
  client APIs (see <xref linkend="userguide-apis">).
  </para>
  <graphic fileref="figures/arch-consumer.jpg" align="center"></graphic>

  <para>
  The data consumer packaged with Inca is a collection of
  <ulink url="http://java.sun.com/products/jsp/">JavaServer Pages (JSP)</ulink>
  and associated files.  The consumer is installed in
  <filename>$INCA_DIST/webapps/inca</filename> and is deployed with
  <ulink url="http://www.mortbay.org/">Jetty</ulink> when the consumer is
  started (e.g., ./bin/inca start consumer).  The consumer
  listens on ports 8080 (HTTP) and 8443 (HTTPS) unless the
  <filename>$INCA_DIST/etc/jetty.xml</filename> is edited as described in
  <xref linkend="consumer-port">.
  </para>

  <para>
  The default consumer's JSPs query the depot for XML results and
  apply XSL to them in order to display HTML status pages.  The basic JSPs are
  described in subsequent sections; they show current and historical data,
  historical reports, deployment information, and allow the configuration of
  custom depot queries.  Depot queries can be cached to improve speed of data
  display (see <xref linkend="view-query">).
  </para>

    <section id="current-data">
      <title>Current Data</title>

      <para>The default page header navigation contains
        links to tabular and map view result summaries for
        the sample suite.  To add other current
      pages under this heading (e.g., result summary tables for
        other suites), customize the
      <filename>header.xsl</filename> file as described in
      <xref linkend="custom-html-header">.</para>

    <section id="table-summary">
      <title>Tabular Suite Summary View</title>
      <para>
      A summary table of suite results is created by passing comma-delimited
      lists in the suiteNames and resourceIds parameters of
      <filename>status.jsp</filename>
      (e.g., status.jsp?suiteNames=sampleSuite&amp;resourceIds=defaultGrid). Adding
      a value for the xsl parameter is optional; the
      <filename>default.xsl</filename> stylesheet is applied by default.  The
      unformatted XML can be viewed by passing a non-zero value for the
      optional debug parameter.  (More information about the consumer's JSP and
      XSL files is provided in <xref linkend="file-desc">.) For example,
      <ulink url="http://localhost:8080/inca/jsp/status.jsp?suiteNames=sampleSuite&amp;resourceIds=defaultGrid">http://localhost:8080/inca/jsp/status.jsp?suiteNames=sampleSuite&amp;resourceIds=defaultGrid</ulink>
      produces the following image:
      <graphic fileref="figures/consumer/sum_page2.jpg" align="center"></graphic>
      </para>
    </section>

    <section id="google">
      <title>Map View using Google Map API</title>

      <section id="google-overview">
        <title>Overview</title>
        <para>
        The map view provides a summary view of the current status of resources
        on a Google map.  For each resource, the summary view gives the
        percentage of reports passed, number of passed reports, number of
        failed reports, and a list of the failed tests with a link to each
        report details page.  A resource is represented on the map as a marker
        and colored red, green, or orange based on the number of tests that
        have passed and/or failed.  The figure below shows the Inca Google map
        view for the NEON testbed (four resources at SDSC and one resource at
        James Reserve).  All resources are passing their tests, so every
        resource marker is green.
        </para>
        <graphic fileref="figures/consumer/googleNeon.png" align="center"></graphic>
        <para>
          Clicking on a marker displays a pop-up with the name of the
          resource and its status information as show below.
        </para>
        <graphic fileref="figures/consumer/googleNeonInfo.png" align="center">
        </graphic>
        <para>
          Clicking on the "Toggle ping status" button displays the status of the
          cross-site ping test as show below.
        </para>
        <graphic fileref="figures/consumer/googleNeonPing.png" align="center">
        </graphic>
      </section>

      <section id="google-setup">
        <title>Setting up Google Map View</title>
        <para>
        To access the map view, you need to install a Google Maps API key in
        your Inca consumer.  To generate one, go the Google Maps API web page at
        <ulink url="http://www.google.com/apis/maps/signup.html">http://www.google.com/apis/maps/signup.html</ulink>,
        type "http://<emphasis role="red">yourHost</emphasis>:8080 in the "My
        web site URL" text box and click the "Generate API key" button.  A new
        page will display a key for your server that looks something like
        "ABQIAAAA_4IHDoSvxQqISMa1RKFLQBSSlCzupJMr-Xoh__duR37DAX9UVBRVn9-X9_4ILpmvilr4hN-QZU8pNQ".
        Copy this key, then edit line 12 of
        <filename>$INCA_DIST/webapps/xml/google.xml</filename>.
        </para>
        <screen>
          ...
          &lt;!-- Google key for your Inca server.  Go to the following website and put
          http://yourservername:8080 in the "My web site URL" textbox at:
          http://www.google.com/apis/maps/signup.html --&gt;
          &lt;key&gt;Insert key here&lt;/key&gt;
          ...
        </screen>
        <para>Replace "Insert key here" with your new Google Maps API key as below
          and save the file.
        </para>
        <screen>
          ...
          &lt;!-- Google key for your Inca server.  Go to the following website and put
          http://yourservername:8080 in the "My web site URL" textbox at:
          http://www.google.com/apis/maps/signup.html --&gt;
          &lt;key&gt;ABQIAAAA_4IHDoSvxQqISMa1RKFLQBSSlCzupJMr-Xoh__duR37DAX9UVBRVn9-X9_4ILpmvilr4hN-QZU8pNQ&lt;/key&gt;
          ...
        </screen>
        <para>
          The Google Map View is generated by running the
          <filename>google.xsl</filename> stylesheet over the XML collected by
          <filename>status.jsp</filename>.  To load the Google map for your Inca
          default deployment, click on the "map of sampleSuite results" link
          underneath the "CURRENT DATA" menu item in the navigation bar.
        </para>
        <graphic fileref="figures/consumer/googleMapMenu.png" align="center">
        </graphic>
        <para>Or you can view the map using the following url:  </para>
        <screen>
          http://<emphasis role="red">yourhost</emphasis>:8080/inca/jsp/status.jsp?xsl=google.xsl&amp;xml=google.xml&amp;suiteNames=sampleSuite&amp;resourceIds=defaultGrid
        </screen>
        <para>
        This will show one resource and the Inca logo, simular to the map
        below.  The resource status for multiple suites can be shown by
        providing comma-delimited lists for the suiteNames and resourceIds
        parameters.
        </para>
        <graphic fileref="figures/consumer/googleDefaultMap.jpg" align="center">
        </graphic>
        <para>
        Clicking on the resource marker will display an info box as below.
        Clicking on the name of any failed test will take you to the reporter
        details page.
        </para>
        <graphic fileref="figures/consumer/googleDefaultMapInfo.jpg" align="center">
        </graphic>
      </section>

      <section id="google-custom">
        <title>Customizing the Google Map View</title>
        <para>
          The configuration information for the Google Map View is located in
          <filename>$INCA_DIST/webapps/inca/xml/google.xml</filename>; you can
          edit this file to customize your Google display.
          Below is a list of customizations you can make.
        </para>
        <variablelist><title>Customizations</title>
          <varlistentry><term><filename>map size</filename></term>
            <listitem>
              <para>
                The size of the Google map can be customized using the &lt;width&gt; and
                &lt;height&gt; tags on lines 14-15.  By default the map is 800x500.
                <screen>
                  13  &lt;!-- The size of the map graphic (in pixels) that will be generated --&gt;
                  14  &lt;width&gt;800&lt;/width&gt;
                  15  &lt;height&gt;500&lt;/height&gt;
                </screen>
              </para>
            </listitem>
          </varlistentry>

          <varlistentry><term><filename>map center</filename></term>
            <listitem>
              <para>
                The center of the map is expressed in latitude/longitude coordinates on
                lines 18-21.  By default, the center of the map corresponds to the
                center of the U.S.
                <screen>
                  17   &lt;!-- The center of the map in latitude/longitude coordinates --&gt;
                  18   &lt;center&gt;
                  19     &lt;latitude&gt;37&lt;/latitude&gt;
                  20     &lt;longitude&gt;982&lt;/longitude&gt;
                  21   &lt;/center&gt;
                </screen>
              </para>
            </listitem>
          </varlistentry>

          <varlistentry><term><filename>magnification level</filename></term>
            <listitem>
              <para>
              The initial magnification, or zoom level, of the map is expressed
              as a number between 1 and 12, located on line 24.
              Zoom level 1 displays you the entire world, while zoom level 12
              allows you to read street names.  The default initial zoom level
              of 4 allows most of the U.S. to be viewed.
              <screen>
                23   &lt;!-- The initial zoom level of the map (higher is closer up) --&gt;
                24   &lt;magnificationLevel&gt;4&lt;/magnificationLevel&gt;
              </screen>
              </para>
            </listitem>
          </varlistentry>

          <varlistentry><term><filename>marker distance</filename></term>
            <listitem>
              <para>
              If there is more than one resource at a particular site, the
              resource markers will be arranged in a circle around the site
              center.  By default, the distance between the markers will be
              determined so that the markers do not overlap each other.  To
              change the distance between the markers (expressed in
              latitude/longitude), uncomment the &lt;markerDist&gt; tag on line
              29.
              <screen>
                26   &lt;!-- The distance in between resource markers at a site.  A default value
                27        is available based on the magnificationLevel.  To override the default,
                28        uncommment the line below and set a new value
                29   &lt;markerDist&gt;1.00&lt;/markerDist&gt;
                30   --&gt;
              </screen>
              </para>
            </listitem>
          </varlistentry>

          <varlistentry><term><filename>number of errors displayed in info window</filename></term>
            <listitem>
              <para>
                If there are more than fifteen errors at a resource, only the first fifteen
                errors will be displayed in the info window that is displayed when a
                resource is clicked.  To override, edit the &lt;maxErrors&gt; tag on line
                33.
                <screen>
                  32   &lt;!-- The maximum number of errors to display in the info window --&gt;
                  33   &lt;maxErrors&gt;15&lt;/maxErrors&gt;
                </screen>
              </para>
            </listitem>
          </varlistentry>

          <varlistentry><term><filename>cross-site test line colors</filename></term>
            <listitem>
              <para>
                If a suite contains a cross-site test, a button will be displayed below
                the map named "Toggle &lt;testName&gt; status".  When the button is
                clicked, the status of an individual cross-site test will be expressed as
                a line in between the source resource and the destination resource.
                The color of the line used to represent the test status can be customized.
                By default, green represents the test passed and red represents the test
                failed.  To change, edit lines 37-40.
                <screen>
                  35   &lt;!-- For cross-site tests, a line will be displayed in between the 2 sites to
                  36        indicate the test status.  Customize the colors for pass fail below. --&gt;
                  37   &lt;line&gt;
                  38     &lt;pass&gt;#228B22&lt;/pass&gt;
                  39     &lt;fail&gt;#FF0000&lt;/fail&gt;
                  40   &lt;/line&gt;
                </screen>
              </para>
            </listitem>
          </varlistentry>

          <varlistentry><term><filename>resource markers</filename></term>
            <listitem>
              <para>
                A resource is represented by a Google marker and the color varies
                on the number of tests that it failed:
                all tests passed = <inlinegraphic fileref="figures/consumer/mm_20_green.png" align="center"></inlinegraphic>, at least one test failed = <inlinegraphic fileref="figures/consumer/mm_20_orange.png" align="center"> </inlinegraphic>,
                all tests failed = <inlinegraphic fileref="figures/consumer/mm_20_red.png" align="center">
              </inlinegraphic>.  Suppose you wanted to change the icons displayed to
                weather icons found at <ulink
                  url="http://econym.googlepages.com/geicons.htm">http://econym.googlepages.com/geicons.htm</ulink> so that
                all tests passed = <inlinegraphic fileref="figures/consumer/icon33.png" align="center"></inlinegraphic>, at least one test failed = <inlinegraphic fileref="figures/consumer/icon34.png" align="center"> </inlinegraphic>,
                all tests failed = <inlinegraphic fileref="figures/consumer/icon36.png" align="center"></inlinegraphic>.  Use the following steps:

                <orderedlist numeration="lowerroman">
                  <listitem>
                    <para>Find the size of the icons and modify the tags &lt;iconWidth&gt; and
                      &lt;iconHeight&gt;.  These weather icons are 32x32 so we would change lines
                      46 and 47 as follows:
                      <screen>
                        46     &lt;iconWidth&gt;32&lt;/iconWidth&gt;
                        47     &lt;iconHeight&gt;32&lt;/iconHeight&gt;
                      </screen>
                    </para>
                  </listitem>
                  <listitem>
                    <para>Pick the anchor point for the icon to be placed in relation to
                      the resource's place on the map.  Since we want the middle of
                      the icon to be placed on the map, we choose the coordinates (16, 16)
                      and modify line 50 as follows:
                      <screen>
                        50     &lt;iconAnchorCoord&gt;16, 16&lt;/iconAnchorCoord&gt;
                      </screen>
                    </para>
                  </listitem>
                  <listitem>
                    <para>We also need to determine the anchor point for the info
                      window to pop up relative to the icon.  Since we want the info window
                      to appear in the top middle, we choose the coordinates (16, 10) and
                      modify line 54 as follows:
                      <screen>
                        54     &lt;iconInfoWindowAnchorCoord&gt;16, 10&lt;/iconInfoWindowAnchorCoord&gt;
                      </screen>
                    </para>
                  </listitem>
                  <listitem>
                    <para>The three weather icons are located on the Google server at:
                      <ulink
                          url="http://maps.google.com/mapfiles/kml/pal4/icon33.png">http://maps.google.com/mapfiles/kml/pal4/icon33.png</ulink>,
                      <ulink
                          url="http://maps.google.com/mapfiles/kml/pal4/icon34.png">http://maps.google.com/mapfiles/kml/pal4/icon34.png</ulink>,
                      <ulink
                          url="http://maps.google.com/mapfiles/kml/pal4/icon36.png">http://maps.google.com/mapfiles/kml/pal4/icon36.png</ulink>.  Modify lines 61-67 as follows:
                      <screen>
                        61  &lt;iconUrlPrefix&gt;http://maps.google.com/mapfiles/kml/pal4/icon&lt;/iconUrlPrefix&gt;
                        62  &lt;iconStatus&gt;
                        63    &lt;fail&gt;36&lt;/fail&gt;
                        64    &lt;pass&gt;33&lt;/pass&gt;
                        65    &lt;warn&gt;34&lt;/warn&gt;
                        66  &lt;/iconStatus&gt;
                        67  &lt;iconUrlSuffix&gt;.png&lt;/iconUrlSuffix&gt;
                      </screen>
                    </para>
                  </listitem>
                  <listItem>
                    <para>Finally, we specify the url to the shadow icon using
                      &lt;shadowIconUrl&gt;, &lt;shadowIconWidth&gt;, and
                      &lt;shadowIconHeight&gt; tags on lines 70-74 as follows:
                      <screen>
                        69  &lt;!-- Url of a icon to use for the shadow of the resource icon --&gt;
                        70  &lt;shadowIconUrl&gt;http://maps.google.com/mapfiles/kml/pal4/icon36s.png&lt;/shadowIconUrl&gt;
                        71
                        72  &lt;!-- the size of the shadow icon --&gt;
                        73  &lt;shadowIconWidth&gt;59&lt;/shadowIconWidth&gt;
                        74  &lt;shadowIconHeight&gt;32&lt;/shadowIconHeight&gt;
                      </screen>
                    </para>
                  </listItem>
                </orderedlist>
              </para>
            </listitem>
          </varlistentry>

          <varlistentry><term><filename>sites</filename></term>
            <listitem>
              <para>
                By default, resources will be displayed around in the map center.
                To specify a site (i.e., a location on the map with its resources), use
                the &lt;site&gt; tag from lines 80 to 111.  Provide a site name using the
                &lt;name&gt; tag, latitude/longitude coordinates using the &lt;latitude&gt;
                and &lt;longitude&gt; tags.  There are online tools, like
                <ulink url="http://netgeo.caida.org/perl/netgeo.cgi/">CAIDA's NetGeo script</ulink>,
                to help convert the IP addresses of your resources to latitude/longitude.
                Specify a list of resource names at a site using the &lt;resource&gt; tag.
                Optionally, you can specify a logo for the site
                using the &lt;logo&gt; tag.  Specify the size of the logo (&lt;width&gt;
                and &lt;height&gt;), angle from 0 degrees (&lt;angle&gt;), and logo
                anchor coordinates (&lt;logoAnchorX&gt;, &lt;logoAnchorY&gt;) as
                shown in the below figure.
                <graphic fileref="figures/consumer/googleSite.png" align="center">
                </graphic>
              </para>
            </listitem>
          </varlistentry>

        </variablelist>
      </section>

    </section>
    </section>

    <section id="reports">
      <title>Reports</title>

      <para>
      Inca's default data consumer uses
      <ulink url="http://cewolf.sourceforge.net/">Cewolf</ulink>,
      a JSP tag library for graphing based on
      <ulink url="http://www.jfree.org/jfreechart/">JFreeChart</ulink>.
      The section for reports in the default page header links to a set of
      default reports.  To link other reports in the page header, customize
      the <filename>header.xsl</filename> file as described in
      <xref linkend="custom-html-header">.  Some of the default reports require
      the "incaQueryStatus" query to have previously executed.  By default,
      this query is scheduled to run once a day.  More information about
      queries can be found in <xref linkend="query-pages">.
      </para>

    <section id="pass-fail-report">
      <title>Pass/Fail Graphs and Error Messages</title>
      <para>
      Historical summary reports with pass/fail status and error information
      can also be created for sets of series.  Summary reports are generated
      with <filename>report.jsp</filename> and configured by default with the
      <filename>statusReport.xml</filename> file.  To customize the XML file,
      you can edit the file
      <filename>$INCA_DIST/webapps/inca/xml/statusReport.xml</filename>.
      </para>
        <para>As a summary report example, the default consumer groups
        different combinations of sampleSuite series in
        <filename>statusReport.xml</filename> and displays the past two weeks
       of results using <filename>report.jsp</filename>'s startDate param.
       Each set of series has a title (e.g. Software Deployment Tests) for its
       grouping and the series nickname, resource name, and report label for
       each series in the group.  Create one or more custom reports by editing
       the groupings and titles.  The width and height of the graphs can also
       be adjusted in <filename>statusReport.xml</filename>.
       See <xref linkend="file-desc"> for more
       details.  Depending on database size and the number of series
       included, summary reports may benefit from being pre-generated.
       </para>
       <para>
        <graphic fileref="figures/consumer/summary_report.jpg" align="center"></graphic>
       </para>
    </section>

    <section id="ave-pass-report">
      <title>Average Pass Rate by Resource/Suite</title>

	<para>A summary status report shows the average series pass rate by resource and suite for the
	past week.  The bars show the average pass rate for the previous week. The bar label shows the value of the average series pass rate for the last week and the difference in percentage from the previous week. The bar label text color is green if the average pass rate is better, red if the average pass rate is worse, and gray if there was no change. Individual bars can be clicked on to show the percentages broken down further for each individual resource or suite.</para>
	<para>The statistics for this report are calculated by <filename>summary.jsp</filename> using the
		<filename>seriesAverages.xsl</filename> and <filename>periodAverages.xsl</filename> stylesheets.</para>
       <para> <graphic fileref="figures/consumer/summaryJsp.gif" align="center"></graphic> </para>
	
       <para>
       The summary report described above links to more detailed reports, like
       the image below that summarizes the average pass rates for a suite or
       resource.
       </para>
       <para>
        <graphic fileref="figures/consumer/summaryDetailsJsp.gif" align="center"></graphic>
       </para>
      </section>

      <section id="series-report">
          <title>Series Error Summary</title>
	<para>
  The summary details reports described in <xref linkend="ave-pass-report">
  link to more detailed reports that summarize test series errors by time
  period.  Each time period includes the number of errors for the series during
  the time period, the number of unique or distinct errors during the period,
  and the percentage of the total results that passed during the period.
  </para>

<para>The change between the total number of errors in the most recent period and the total number of errors in the period before it is also given. If the number of errors in the most recent period is greater than the number of errors in the previous period (+), the number appears in red. If the number of errors in the most recent period is less than the number in the previous period (-), the number is green.</para>
	<para>The statistics for these reports are generated by <filename>status.jsp</filename> using the
		<filename>seriesSummary.xsl</filename> stylesheet.</para>
       <para>
        <graphic fileref="figures/consumer/error-summary.gif" align="center"></graphic>
       </para>
      </section>

      <section id="ave-pass-history-report">
          <title>Average Pass History</title>
	<para>The average series pass rate reports show the average series pass rate over time grouped by resource or suite.</para>
	<para>The statistics for these reports are generated by <filename>summaryHistory.jsp</filename> using the
		<filename>seriesAverages.xsl</filename> and <filename>periodAverages.xsl</filename> stylesheets.</para>
       <para>
        <graphic fileref="figures/consumer/summaryHistoryJsp.gif" align="center"></graphic>
       </para>
      </section>
  </section>

  <section id="query-pages">
      <title>Query</title>
	<para>The query pages allow users to generate graphs and cache queries to improve data display.</para>

   <section id="graph-series">
      <title>Create Graph</title>
      <para>
       If <filename>graph.xsl</filename> is used as the xsl parameter for the
        <filename>status.jsp</filename> script that displays suite results,
        a form will be generated to select suite series to graph.  For
        example, <ulink url="http://localhost:8080/inca/jsp/status.jsp?xsl=graph.xsl&amp;suiteNames=sampleSuite&amp;resourceIds=defaultGrid">http://localhost:8080/inca/jsp/status.jsp?xsl=graph.xsl&amp;suiteNames=sampleSuite&amp;resourceIds=defaultGrid</ulink> will generate:
        <graphic fileref="figures/consumer/graphForm.jpg" align="center"></graphic>
      </para>
      <para>
        After selecting the "vtk-nvgl_version" series and
        clicking on the "graph" button in the form above,
        a graph page is shown with
        an XY plot of the pass/fail status of the selected
        series, a series pass/fail summary table, a bar graph of
        error message frequency (if the selected series have errors),
        a summary table of error messages, and a form to customize the graph
        further (as in the image below).
        This graph page is generated by the <filename>graph.jsp</filename>
        script with Cewolf tags.
        <graphic fileref="figures/consumer/graph1.jpg" align="center"></graphic>
      </para>
      <para>Only two weeks of data are returned
        initially.  To query for all results, clear the "start date"
        field in the "customize graph" section and click "re-graph".
        To retrieve graphs more quickly, data point
        mouseover text and links to
        report details are turned off for the pass/fail graph.
        The data points can be made interactive by choosing "show mouseovers/hyperlinks"
        in the "customize graph" section and clicking on "re-graph".
        Clicking on interactive data points will lead to
        report details pages, mousing over them will show
        collection times and any error messages.
        <graphic fileref="figures/consumer/graph2.jpg" align="center"></graphic>
            </para>

      <para>Multiple series can also be graphed together as in the image below.
      A table under each graph summarizes results for each series.
        <graphic fileref="figures/consumer/graph3.jpg" align="center"></graphic>
            </para>

      <para>Graph pages for individual series are also linked from the report details pages.
        <graphic fileref="figures/consumer/details_graph.png" align="center"></graphic>
       </para>

     </section>

      <section id="create-query">
        <title>Create Stored Query</title>
	      <para>
        The consumer can cache frequently executed depot queries in order to
        improve data display speed.   For example, the latest results for a
        suite can be cached in order to quickly display a suite status page.
        By default the latest results for the sampleSuite are cached every 15
        minutes.  Results are also cached each day for historical reports.
        </para>
        <para>
        Cached queries can be created using the query management page described
        in <xref linkend="view-query"> or by checking boxes in the form
        generated by <filename>status.jsp</filename> and
        <filename>create-query.xsl</filename>.  The checkbox form builds a
        query from selected series.
        </para>
        <para>
        <graphic fileref="figures/consumer/create-query.gif" align="center"></graphic>
        </para>
      </section>

      <section id="view-query">
        <title>Manage Stored Queries</title>
        <para>
        Default cached queries can be managed via the
        <filename>query.jsp</filename> page.  Click on one of the pre-defined
        queries to see its parameters.  Each query has a name, execution
        schedule, depot command it executes and the parameters for the depot
        command executed.
        </para>
        <para>
        <graphic fileref="figures/consumer/query.gif" align="center"></graphic>
        </para>
      </section>

  </section>


  <section id="info">
      <title>Info</title>
      <para>Currently the only informational page is a list of
      all running reporters in an inca deployment.  To link other informational
      pages under this heading, customize the
      <filename>header.xsl</filename> file as described in
      <xref linkend="custom-html-header">.</para>
      <graphic fileref="figures/consumer/running-reporters.jpg" align="center"></graphic>

  </section>

<section id="file-desc">
    <title>Description of Data Consumer Files</title>

    <para>
      The following table describes the main JSPs contained in the
      default consumer.
      The JSPs generally retrieve XML from depot and agent functions and
      apply XSL stylesheets to display HTML.  If the "debug=1" parameter
      for a JSP is used, the JSP displays the XML. Parameters marked with
      an asterisk (*) are optional.
    </para>

    <table>
      <title>Default Consumer JSP</title>
      <tgroup cols="4">
        <thead>
          <row valign="top">
            <entry><para>Name</para></entry>
            <entry><para>Purpose</para></entry>
            <entry><para>Parameters</para></entry>
          </row>
        </thead>
        <tbody>

          <row valign="top">
            <entry><para><filename>config.jsp</filename>
                <graphic fileref="figures/consumer/config_sm.jpg" align="center"></graphic>
              </para></entry>
            <entry><para>
                Prints description of deployed suites and series.
                Linked at the bottom of <filename>index.jsp</filename>
              </para></entry>
            <entry><itemizedList>
                <listItem><para>xsl *: stylesheet to format returned XML [default: config.xsl]</para>
                </listItem></itemizedList><para>e.g. <ulink url="http://localhost:8080/inca/jsp/config.jsp">http://localhost:8080/inca/jsp/config.jsp</ulink></para></entry>
          </row>

          <row valign="top">
            <entry><para><filename>error.jsp</filename>
                <graphic fileref="figures/consumer/errorJsp_sm.gif" align="center"></graphic>
              </para></entry>
            <entry><para>
                Prints Inca error message page.
              </para></entry>
            <entry><itemizedList>
                <listItem><para>msg: error message from another JSP</para></listItem>
                <listItem><para>usage: correct usage of the JSP</para></listItem>
	    </itemizedList></entry>
          </row>

          <row valign="top">
            <entry><para><filename>graph.jsp</filename>
                <graphic fileref="figures/consumer/graph_sm.jpg" align="center"></graphic>
              </para></entry>
            <entry><para>
                Historical graphs of pass/fail status and error frequency.
              </para></entry>
            <entry><itemizedList>
                <listItem>
                  <para>series: a series nickname and resource separated by a comma and an optional label</para>
                </listItem>
                <listItem>
                  <para>legend *: boolean for showing legend</para>
                </listItem>
                <listItem>
                  <para>legendAnchor *: position of legend</para>
                </listItem>
                <listItem>
                  <para>height *: graph height in pixels</para>
                </listItem>
                <listItem>
                  <para>width *: graph width in pixels</para>
                </listItem>
                <listItem>
                  <para>startDate *: date to start querying data for</para>
                </listItem>
                <listItem>
                  <para>endDate *: date to stop querying data for</para>
                </listItem>
                <listItem>
                  <para>bgcolor *: background color of graph images</para>
                </listItem>
                <listItem>
                  <para>map *: boolean for showing graph links and mouseovers</para>
                </listItem>
              </itemizedList><para>e.g. <ulink url="http://localhost:8080/inca/jsp/graph.jsp?series=ant_helloworld_compile_test,localResource">http://localhost:8080/inca/jsp/graph.jsp?series=ant_helloworld_compile_test,localResource</ulink></para></entry>
          </row>

	<row valign="top">
            <entry><para><filename>index.jsp</filename>
                <graphic fileref="figures/consumer/index_sm.jpg" align="center"></graphic>
              </para></entry>
            <entry><para>
                Lists an installation's configured suites and resource
                names in an HTML form whose action is to display results
                for the selected suite and resource.  The consumer
                initially redirects to this page.
              </para></entry>
            <entry><itemizedList><listItem><para>xsl *: stylesheet to format returned XML [default: index.xsl]</para></listItem>
              </itemizedList><para>e.g. <ulink url="http://localhost:8080/inca/jsp/index.jsp">http://localhost:8080/inca/jsp/index.jsp</ulink></para></entry>
          </row>

          <row valign="top">
            <entry><para><filename>instance.jsp</filename>
                <graphic fileref="figures/consumer/inst_sm.jpg" align="center"></graphic>
              </para></entry>
            <entry><para>
                Queries depot for report instance and invokes the specified xsl stylesheet on it.
              </para></entry>
            <entry><itemizedList>
                <listItem>
                  <para>instanceId: the id of the particular report instance</para>
                </listItem>
                <listItem>
                  <para>configId: the id of the series config the instance belongs to</para>
                </listItem>
                <listItem>
                  <para>resourceId: the resource id for series config (for history link)</para>
                </listItem>
                <listItem>
                  <para>xsl *: name of stylesheet to format returned XML [default: instance.xsl]</para>
                </listItem>
              </itemizedList><para>e.g. <ulink url="http://localhost:8080/inca/jsp/instance.jsp?instanceId=1&amp;configId=1&amp;resourceId=localResource">http://localhost:8080/inca/jsp/instance.jsp?instanceId=1&amp;configId=1&amp;resourceId=localResource</ulink></para></entry>
          </row>

          <row valign="top">
            <entry><para><filename>query.jsp</filename>
                <graphic fileref="figures/consumer/query_sm.jpg" align="center"></graphic>
              </para></entry>
            <entry><para>
                Page for managing stored queries in the Consumer.  Queries
  can be added, deleted, changed, viewed or executed (and return XML).
  This jsp page manages the query manipulation via jsp tags and leaves the
  display of the current queries to a stylesheet.
              </para></entry>
            <entry><itemizedList>
                <listItem>
                  <para>action: an action to take on the query (see JSP usage for more information)</para>
                </listItem>
                <listItem>
                  <para>xsl *: name of stylesheet to format returned XML [default: query.xsl]</para>
                </listItem>
              </itemizedList><para>e.g. <ulink url="http://localhost:8080/inca/jsp/query.jsp">http://localhost:8080/inca/jsp/query.jsp</ulink></para></entry>
          </row>

          <row valign="top">
            <entry><para><filename>report.jsp</filename>
                <graphic fileref="figures/consumer/summary_report_sm.jpg" align="center"></graphic>
              </para></entry>
            <entry><para>
                Summary report with graphs of pass/fail status and error frequency.
              </para></entry>
            <entry><itemizedList>
                <listItem>
                  <para>startDate *: start date for summary report (gets complete history by default)</para>
                </listItem>
                <listItem>
                  <para>endDate *: end date for summary report (current date by default)</para>
                </listItem>
                <listItem>
                  <para>xml *: name of xml file to configure report (<filename>webapps/xml/statusReport.xml</filename> by default)</para>
                </listItem>
              </itemizedList><para>e.g. <ulink url="http://localhost:8080/inca/jsp/report.jsp">http://localhost:8080/inca/jsp/report.jsp</ulink></para></entry>
          </row>

	<row valign="top">
            <entry><para><filename>status.jsp</filename>
                <graphic fileref="figures/consumer/sum_page2_sm.jpg" align="center"></graphic>
              </para></entry>
            <entry><para>
                Displays current results for a set of suites or cached queries.
                This page is the action of the <filename>index.jsp</filename> form to display suite results.
              </para></entry>
            <entry><itemizedList>
                <listItem>
                  <para>suiteNames *: a comma separated list of suite names.  At least one suite name
    is required if queryNames is empty and the number of suite names
    should match the number of resourceIds.  A suite name is optional if
    queryNames is provided.</para>
                </listItem>
                <listItem>
                  <para>queryNames *: a comma separated list of cached query names.  At least one name
    is required if suiteNames is empty.</para>
                </listItem>
                <listItem>
                  <para>resourceIds *: a comma separated list of resource group ids.  At least one
    resource id is required if suiteNames is not empty and the number of
    resourceIds should match the number of suiteNames.  A resource id is
    optional if queryNames is provided.  </para>
                </listItem>
                <listItem>
                  <para>xml *: a comma separated list of xml files to include.  Can be empty, contain
    one xml file or must match number of suiteNames and resourceIds if
    queryNames is empty. </para>
                </listItem>
                <listItem>
                  <para>xsl *: name of stylesheet to format returned XML [default: default.xsl]</para>
                </listItem>
              </itemizedList><para>e.g. <ulink url="http://localhost:8080/inca/jsp/status.jsp?suiteNames=sampleSuite&amp;resourceIds=defaultGrid">http://localhost:8080/inca/jsp/status.jsp?suiteNames=sampleSuite&amp;resourceIds=defaultGrid</ulink></para></entry>
          </row>

         <row valign="top">
            <entry><para><filename>summary.jsp</filename>
                <graphic fileref="figures/consumer/summaryJsp_sm.gif" align="center"></graphic>
              </para></entry>
            <entry><para>
                Shows the average series pass rate by resource and by suite for a given time period.  Uses
		<filename>seriesAverages.xsl</filename> and <filename>periodAverages.xsl</filename>
		to calculate statistics.
              </para></entry>
            <entry><para>e.g. <ulink url="http://localhost:8080/inca/jsp/summary.jsp">http://localhost:8080/inca/jsp/summary.jsp</ulink></para></entry>
          </row>

         <row valign="top">
            <entry><para><filename>summaryDetails.jsp</filename>
                <graphic fileref="figures/consumer/summaryDetailsJsp_sm.gif" align="center"></graphic>
              </para></entry>
            <entry><para>
                Displays summary statistic details for resource or suite.  Linked from <filename>summary.jsp</filename>.
		Uses <filename>seriesAverages.xsl</filename> and <filename>periodAverages.xsl</filename>
                to calculate statistics.
              </para></entry>
            <entry><itemizedList>
                <listItem>
                  <para>resource *: resource to get summary stats for (e.g. localResource)</para>
                </listItem>
                <listItem>
                  <para>guid *: suite guid to get summary stats for (e.g. incas://localhost:6323/sampleSuite)</para>
                </listItem>
              </itemizedList><para>e.g. <ulink url="http://localhost:8080/inca/jsp/summaryDetails.jsp?resource=localResource">http://localhost:8080/inca/jsp/summaryDetails.jsp?resource=localResource</ulink></para></entry>
          </row>

         <row valign="top">
            <entry><para><filename>summaryHistory.jsp</filename>
                <graphic fileref="figures/consumer/summaryHistoryJsp_sm.gif" align="center"></graphic>
              </para></entry>
            <entry><para>
                Displays average series pass rate by filter. Uses
                <filename>seriesAverages.xsl</filename> and <filename>periodAverages.xsl</filename>
                to calculate statistics.
              </para></entry>
            <entry><itemizedList>
                <listItem>
                  <para>filterResource *: if true displays history grouped by resource or if a resource
                id is specified, displays history grouped by suite for that resource</para>
                </listItem>
                <listItem>
                  <para>filterSuite *: if true displays history grouped by suite or if a suite guid
             is specified, displays history grouped by resource for that suite</para>
                </listItem>
              </itemizedList><para>e.g. <ulink url="http://localhost:8080/inca/jsp/summaryHistory.jsp?filterSuite=true">http://localhost:8080/inca/jsp/summaryHistory.jsp?filterSuite=true</ulink></para></entry>
          </row>


        </tbody>
      </tgroup>
    </table>

         <para>
        The default JSPs use the XSL stylesheets in
        <filename>$INCA_DIST/webapps/xsl</filename>
           to transform the XML into HTML.
           The following stylesheets are installed
        with the default consumer:</para>

      <table>
        <title>Default Consumer XSL</title>
        <tgroup cols="3">
          <thead>
            <row valign="top">
              <entry><para>Name</para></entry>
              <entry><para>Applied To</para></entry>
              <entry><para>Purpose</para></entry>
            </row>
          </thead>
          <tbody>

            <row valign="top">
              <entry><para><filename>config.xsl</filename>
                  <graphic fileref="figures/consumer/config_sm.jpg" align="center"></graphic>
                </para></entry>
               <entry><para><filename>config.jsp</filename></para></entry>
              <entry><para>Prints description of deployed suites and series.</para></entry>
            </row>

            <row valign="top">
              <entry><para><filename>create-query.xsl</filename>
                  <graphic fileref="figures/consumer/create-query_sm.jpg" align="center"></graphic>
                </para></entry>
               <entry><para><filename>status.jsp</filename></para></entry>
              <entry><para>Prints form to select series and resources to query.</para></entry>
            </row>

            <row valign="top">
              <entry><para><filename>default.xsl</filename>
                  <graphic fileref="figures/consumer/sum_page2_sm.jpg" align="center"></graphic>
                </para></entry>
              <entry><para><filename>status.jsp</filename></para></entry>
              <entry><para>Prints table of suite(s) results.</para></entry>
            </row>

            <row valign="top">
              <entry><para><filename>error.xsl</filename>
                  <graphic fileref="figures/consumer/errorJsp_sm.gif" align="center"></graphic>
                </para></entry>
              <entry><para><filename>error.jsp</filename></para></entry>
              <entry><para>Displays JSP error message and usage information.</para></entry>
            </row>

            <row valign="top">
              <entry><para><filename>footer.xsl</filename>
                  <graphic fileref="figures/consumer/footer_sm.jpg" align="center"></graphic>
                </para></entry>
              <entry><para>(included in most other xsl files)</para></entry>
              <entry><para>Prints HTML page footer with the Inca logo.</para></entry>
            </row>

            <row valign="top">
              <entry><para><filename>google.xsl</filename>
                  <graphic fileref="figures/consumer/google_sm.jpg" align="center"></graphic>
                </para></entry>
              <entry><para><filename>status.jsp</filename></para></entry>
              <entry><para>Prints google map summary of current data.</para></entry>
            </row>

            <row valign="top">
              <entry><para><filename>graph.xsl</filename>
                  <graphic fileref="figures/consumer/graph_form_sm.jpg" align="center"></graphic>
                </para></entry>
              <entry><para><filename>status.jsp</filename></para></entry>
              <entry><para>Prints form to select series to graph.</para></entry>
            </row>

            <row valign="top">
              <entry><para><filename>header.xsl</filename>
                  <graphic fileref="figures/consumer/header_sm.jpg" align="center"></graphic>
                </para></entry>
              <entry><para><filename>(included in most other xsl files)</filename></para></entry>
              <entry><para>Prints HTML page header.</para></entry>
            </row>

            <row valign="top">
              <entry><para><filename>inca-common.xsl</filename></para></entry>
              <entry><para>(included in most other stylesheets)</para></entry>
              <entry><para>Common templates for use in Inca stylesheets.</para></entry>
            </row>

            <row valign="top">
              <entry><para><filename>index.xsl</filename>
                  <graphic fileref="figures/consumer/index_sm.jpg" align="center"></graphic>
                </para></entry>
              <entry><para><filename>index.jsp</filename></para></entry>
              <entry><para>
                  Lists all configured suite and resource names in an
                  HTML form whose action is to display results for the
                  selected suite and resource.
                </para></entry>
            </row>

            <row valign="top">
              <entry><para><filename>instance.xsl</filename>
                  <graphic fileref="figures/consumer/inst_sm.jpg" align="center"></graphic>
                </para></entry>
              <entry><para><filename>instance.jsp</filename></para></entry>
              <entry><para>Prints HTML table with report details.</para></entry>
            </row>

            <row valign="top">
              <entry><para><filename>legend.xsl</filename>
                  <graphic fileref="figures/consumer/legend_sm.jpg" align="center"></graphic>
                </para></entry>
              <entry><para>(included in <filename>default.xsl</filename>
                  and <filename>swStack.xsl</filename>)</para></entry>
              <entry><para>Prints a key to cell colors and text.</para></entry>
            </row>

            <row valign="top">
              <entry><para><filename>periodAverages.xsl</filename>
                  <graphic fileref="figures/consumer/summaryJsp_sm.gif" align="center"></graphic>
                </para></entry>
              <entry><para><filename>summary.jsp</filename>, <filename>summaryDetails.jsp</filename>,
		<filename>summaryHistory.jsp</filename></para></entry>
              <entry><para>Computes pass percentage for suites and resources for a given period.</para></entry>
            </row>

            <row valign="top">
              <entry><para><filename>query.xsl</filename>
                  <graphic fileref="figures/consumer/query_sm.jpg" align="center"></graphic>
                </para></entry>
              <entry><para><filename>query.jsp</filename></para></entry>
              <entry><para>Creates form to manipulate hql queries.</para></entry>
            </row>

            <row valign="top">
              <entry><para><filename>seriesAverages.xsl</filename>
                  <graphic fileref="figures/consumer/summaryJsp_sm.gif" align="center"></graphic>
                </para></entry>
              <entry><para><filename>summary.jsp</filename>, <filename>summaryDetails.jsp</filename>,
		<filename>summaryHistory.jsp</filename></para></entry>
              <entry><para>Computes series pass percentages.</para></entry>
            </row>

            <row valign="top">
              <entry><para><filename>seriesSummary.xsl</filename>
                  <graphic fileref="figures/consumer/error-summary_sm.gif" align="center"></graphic>
                </para></entry>
              <entry><para><filename>status.jsp</filename></para></entry>
              <entry><para>Print out a table of stats for individual series.
                </para></entry>
            </row>
	
	<row valign="top">
              <entry><para><filename>swStack.xsl</filename>
                  <graphic fileref="figures/consumer/swstack_sm.jpg" align="center"></graphic>
                </para></entry>
              <entry><para><filename>status.jsp</filename></para></entry>
              <entry><para>Prints table of suite(s) results.  Uses XML file
                  to format table rows by software categories and packages.</para></entry>
            </row>


          </tbody>
        </tgroup>
      </table>
     </section>

  <section id="custom-display">
    <title>Changing the Look</title>

    <section id="custom-color">
      <title>Colors and Fonts</title>
      <para>
      Properties such as colors and fonts are controlled by the default CSS
      (Cascading Style Sheet) file
      <filename>$INCA_DIST/webapps/inca/css/inca.css</filename>.  The drop
      down nav bar in the header is controlled by
      <filename>$INCA_DIST/webapps/inca/css/nav.css</filename>.  You can edit
      these files to customize the consumer display.
      For example, to change the color in the reporter detail pages header bar,
      edit <filename>inca.css</filename> and change lines 111-112 to:
        <screen>.header {
          background-color: #D07651;</screen>
        The details pages will now look like:
        <graphic fileref="figures/consumer/color-change.jpg" align="center"></graphic>
      </para>
      <para>For general information, visit the [ <ulink url="http://www.w3schools.com/css/">CSS tutorial</ulink> ].</para>
    </section>

    <section id="custom-html">
      <title>HTML Layout</title>

      <para>
      To modify the default HTML layout, edit the XSL stylesheet that is
      being applied to the JSP or create a new stylesheet in
      in <filename>$INCA_DIST/webapps/inca/xsl</filename> and pass it in the
      JSP "xsl" parameter.
      The default JSP and XSL files are described in
      <xref linkend="file-desc">.</para>
      <para>For general information about editing stylesheets,
        visit the [ <ulink url="http://www.w3schools.com/xsl/">XSL tutorial</ulink> ].</para>

      <section id="custom-html-values">
        <title>Custom Values in HTML Table Cells</title>
        <para>To display report values other
          than the default text of either a software version, "pass", or "error"
          on the suite results pages, edit <filename>default.xsl</filename>.  </para>
        <para> For example, to change the default suite status to print the time successful
          reporters ran and a truncated error message for failures like:
        </para>
        <para><graphic fileref="figures/consumer/text-change.jpg" align="center"></graphic></para>
        <para>Edit <filename>default.xsl</filename>, add a new variable for the custom table cell text and
          print the custom cell text rather than the default text:
        </para>
        <para>
          <screen>188  &lt;xsl:variable name="cellText"&gt;
            189    &lt;xsl:choose&gt;
            190      &lt;xsl:when test="string($instance)=''"&gt;
            191        &lt;xsl:value-of select="''" /&gt;
            192      &lt;/xsl:when&gt;
            193      &lt;xsl:when test="string($result/body)!=''
            194             and string($result/errorMessage)=''
            195             and ($comparitor='Success' or count($comparitor)=0)"&gt;
            196               passed:&#160;
            197        &lt;!-- get yyyy-mm-dd from gmt timestamp --&gt;
            198        &lt;xsl:value-of select="substring($result/gmt, 1, 10)" /&gt;&#160;
            199        &lt;!-- get HH:MM from gmt timestamp --&gt;
            200        &lt;xsl:value-of select="substring($result/gmt, 12, 5)" /&gt;
            201      &lt;/xsl:when&gt;
            202      &lt;xsl:otherwise&gt;
            203               error:
            204        &lt;xsl:value-of select="substring($result/errorMessage, 1, 30)" /&gt;
            205      &lt;/xsl:otherwise&gt;
            206    &lt;/xsl:choose&gt;
            207  &lt;/xsl:variable&gt;
            208  &lt;xsl:choose&gt;
            209    &lt;xsl:when test="$exit!=''"&gt;
            210      &lt;td class="{$exit}"&gt;
            211        &lt;a href="{$href}"&gt;&lt;xsl:value-of select="$cellText"/&gt;&lt;/a&gt;
            212        &lt;xsl:if test="$url[matches(., 'markOld')]"&gt;</screen>
        </para>
      </section>
  </section>
      <section id="custom-html-header">
        <title>Custom Page Header</title>

        <para>The default page header is generated by the inclusion of the
          <filename>header.xsl</filename> file in other xsl files.  The header
          is a navigation bar with drop down links to a set of default status
          pages:
          <graphic fileref="figures/consumer/googleMapMenu.png" align="center"></graphic>
        </para>
        <para>The header's navigation bar is an HTML unordered list that is
        formatted with the <filename>nav.css</filename> stylesheet.  To add
        or remove links in the navigation bar, open <filename>header.xsl</filename>
          and change the appropriate link.  For example, to show a table of suite
          results for a new suite called "newSuite" on a new resource called "newResource":
        <screen>57  &lt;li&gt;&lt;h2&gt;Current Data&lt;/h2&gt;
58    &lt;ul&gt;
59      &lt;li&gt;
60        &lt;a href="'status.jsp?xsl=default.xsl&amp;amp;suiteNames=newSuite&amp;amp;resourceIds=newResource'"&gt;
61           table of newSuite results&lt;/a&gt;
62      &lt;/li&gt;</screen>
        </para>
        <para>Any other link can be added or removed as a list element.  The
          stylesheet supports additional levels of nested list links.  Note that
          the top level list elements are displayed from bottom to top (i.e. "Current Data"
          is listed last in <filename>header.xsl</filename> but it is displayed
          further left than "Historical Data" and "Info" in the navigation bar).
        </para>

        <para>Another example of customizing the HTML header would be to add a call to a custom header stylesheet in the
          "printBodyTitle" template.  Edit <filename>inca-common.xsl</filename>:</para>
        <para><screen>13  <emphasis role="red">&lt;xsl:include href="custom-header.xsl"/&gt;</emphasis>
          ...
          24  &lt;xsl:template name="printBodyTitle"&gt;
          25    &lt;xsl:param name="title"/&gt;
          26    <emphasis role="red">&lt;xsl:call-template name="custom-header"/&gt;</emphasis>
          27    &lt;xsl:variable name="datenow" select="date:new()" /&gt;
          28    &lt;xsl:variable name="dateformat" select="sdf:new('MM-dd-yyyy hh:mm a (z)')"/&gt;
          29    &lt;table width="100%" border="0"&gt;
          30      &lt;tr align="left"&gt;</screen></para>

        <para>Create a <filename>$INCA_DIST/webapps/xsl/custom-header.xsl</filename> like:</para>

        <para><screen>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

          &lt;!-- ================================================ --&gt;
          &lt;!-- Prints out custom header for Inca status pages   --&gt;
          &lt;!-- ================================================ --&gt;
          &lt;xsl:stylesheet version="1.0"
          xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
          xmlns="http://www.w3.org/1999/xhtml"&gt;

          &lt;xsl:template name="custom-header"&gt;
          &lt;table class="header" width="100%"&gt;
          &lt;tr&gt;
          &lt;td bgcolor="#003366"&gt;
          &lt;img class="logo" src="img/header.jpg"/&gt;
          &lt;/td&gt;
          &lt;/tr&gt;
          &lt;/table&gt;
          &lt;table class="menu" width="100%"&gt;
          ... custom navigation ...
          &lt;/table&gt;
          &lt;/xsl:template&gt;

          &lt;/xsl:stylesheet&gt;</screen></para>

        <para>The resulting page would look something like: </para>
        <para><graphic fileref="figures/consumer/custom-header.jpg" align="center"></graphic></para>
      </section>
    </section>

  <section id="consumer-alt-location">
    <title>Changing the Installation Location</title>
    <para>You can install the data consumer in a non-default location (e.g. on a machine where the depot and agent are not running) if you: </para>
    <itemizedList>
      <listItem>
        <para>
          Copy the <filename>incaInstall.sh</filename> script to the machine where the consumer will run.
        </para>
        <screen>% wget http://inca.sdsc.edu/releases/&ugVersion/incaInstall.sh</screen>
      </listItem>
      <listItem>
        <para>
          Install consumer on the new machine:
        </para>
        <screen>% ./incaInstall.sh $INCA_DIST consumers</screen>
      </listItem>
      <listItem>
        <para>
          Copy the consumer key, certificate, and trusted directory from the machine where the agent/depot are running (orig.machine)
          to the new machine:
        </para>
        <screen>% scp <emphasis role="red">orig.machine:$ORIG_INCA_DIST</emphasis>/etc/consumerkey.pem $INCA_DIST/etc/; \
          scp <emphasis role="red">orig.machine:$ORIG_INCA_DIST</emphasis>/etc/consumercert.pem $INCA_DIST/etc/;
          scp "<emphasis role="red">orig.machine:$ORIG_INCA_DIST</emphasis>/etc/trusted/*" $INCA_DIST/etc/trusted/;</screen>
      </listItem>
      <listItem>
        <para>Edit the <filename>$INCA_DIST/etc/common/inca.properties</filename> local file and specify the full hostname
          of the machine where the agent and depot are running:
          <screen>114 inca.consumer.agent=incas://<emphasis role="red">agent.hostname</emphasis>:6323
            ...
            128 inca.consumer.depot=incas://<emphasis role="red">depot.hostname</emphasis>:6324</screen>
        </para>
      </listItem>
      <listItem> <para> Start the consumer component on the new machine: </para>
        <screen>% cd $INCA_DIST; ./bin/inca start consumer</screen>
      </listItem>
    </itemizedList>
  </section>

  <section id="consumer-port">
    <title>Changing Ports</title>
    <para>
      By default, the consumer is started on port 8080 (HTTP) and 8443
      (HTTPS).  To change the port numbers, edit $INCA_DIST/etc/jetty.xml.
      For example to change the HTTP  port to 9080, search for
      'SelectChannelConnector' and change the following line:
    </para>

    <screen>
      &lt;Set name="port"&gt;8080&lt;/Set&gt;
    </screen>

    <para>to: </para>

    <screen>
      &lt;Set name="port"&gt;9080&lt;/Set&gt;
    </screen>

    <para>Likewise to change the HTTPS port to 9443, search for
    'SslSocketConnector' and change the following line: </para>

    <screen>
      &lt;Set name="port"&gt;8443&lt;/Set&gt;
    </screen>

    <para>to: </para>

    <screen>
      &lt;Set name="port"&gt;9443&lt;/Set&gt;
    </screen>

    <para>If you also have the HTTP port enabled, change the confidentialPort
    tag under its configuration from: </para>

    <screen>
      &lt;Set name="confidentialPort"&gt;8443&lt;/Set&gt;
    </screen>

    <para>to: </para>

    <screen>
      &lt;Set name="confidentialPort"&gt;9443&lt;/Set&gt;
    </screen>
  </section>

  <section id="disable-http-consumer">
    <title>Disabling HTTP</title>
    <para>
      By default, the consumer is configured as both an HTTP and HTTPS server.
      To disable HTTP, edit
      <filename>$INCA_DIST/etc/jetty.xml</filename> and
      comment out the section "Add a HTTP listener on port 8080"
    </para>

    <screen>
      &lt;!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --&gt;
      &lt;!-- Add a HTTP listener on port 8080                                --&gt;
      &lt;!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --&gt;
      &lt;!--
      &lt;Call name="addConnector"&gt;
        &lt;Arg&gt;
            &lt;New class="org.mortbay.jetty.nio.SelectChannelConnector"&gt;
              &lt;Set name="host"&gt;&lt;SystemProperty name="jetty.host" /&gt;&lt;/Set&gt;
              &lt;Set name="port"&gt;&lt;SystemProperty name="jetty.port" default="8080"/&gt;&lt;/Set&gt;
              &lt;Set name="maxIdleTime"&gt;30000&lt;/Set&gt;
              &lt;Set name="Acceptors"&gt;2&lt;/Set&gt;
              &lt;Set name="statsOn"&gt;false&lt;/Set&gt;
              &lt;Set name="confidentialPort"&gt;8443&lt;/Set&gt;
        &lt;Set name="lowResourcesConnections"&gt;5000&lt;/Set&gt;
        &lt;Set name="lowResourcesMaxIdleTime"&gt;5000&lt;/Set&gt;
            &lt;/New&gt;
        &lt;/Arg&gt;
      &lt;/Call&gt;
      --&gt;
    </screen>

    <para>Then restart the consumer. </para>

    <screen>
      % ./bin/inca restart consumer
    </screen>
  </section>

  <section id="https-creds">
    <title>Changing HTTPS credential</title>

    <para>By default, the HTTPS server will use the credential stored in
      <filename>$INCA_DIST/etc/consumerKeystore</filename>.  Its DN is
      "cn=Inca Consumer SSL, o=SDSC, l=San Diego, st=California, c=US".  If you'd
      like to generate a certificate with a different DN, run the keytool command as
      follows:
    </para>

    <screen>
% rm -f etc/consumerKeystore;
% keytool -keystore etc/consumerKeystore -alias jetty -genkey -keyalg RSA -dname <emphasis role="red">your_DN</emphasis>
    </screen>

    <para>keytool will prompt you for a keystore password and a key password.  You can
      either make them different or use the same one.  If you use the password
      "consumer", no further changes are needed.  Otherwise, you will have to modify
      &lt;Set name="keyPassword"&gt;, &lt;Set name="password"&gt;, and
      &lt;Set name="trustPassword"&gt; in the
      "Add a HTTPS SSL listener on port 8443" section in
      <filename>$INCA_DIST/etc/jetty.xml</filename>.  You can either put the
      password in there in plain text or obfuscate it using Jetty's password
      utility as follows:
    </para>

    <para id="jetty-password">
      <screen>% java -classpath lib/jetty-6.1.7.jar:lib/jetty-util-6.1.7.jar org.mortbay.jetty.security.Password <emphasis role="red">your_password</emphasis>
      </screen>
    </para>

    <para>It will output two lines such as follows:</para>

    <screen>
    OBF:1t3b1uh61ugk1t2v
    MD5:482b9f833150f58964b78ddbfa5ab23d
    </screen>

    <para>Edit <filename>$INCA_DIST/etc/jetty.xml</filename> and replace the
    string beginning with OBF in both &lt;Set name="KeyPassword"&gt; and
    &lt;Set name="Password"&gt; with the string
      provided by Jetty's password utility:
    </para>
    <screen>
      &lt;Set name="password"&gt;OBF:1v8w1v2h1wg01z0d1z0h1wfy1v1x1v9q&lt;/Set&gt;
      &lt;Set name="keyPassword"&gt;OBF:1v8w1v2h1wg01z0d1z0h1wfy1v1x1v9q&lt;/Set&gt;
      &lt;Set name="trustPassword"&gt;OBF:1v8w1v2h1wg01z0d1z0h1wfy1v1x1v9q&lt;/Set&gt;
    </screen>

  </section>

  <section id="password-consumer">
    <title>Adding Password Protection</title>
    <para>
      By default, a password is only required on the
      <filename>query.jsp</filename> page.  To expand or remove password
      protection,
      edit the section 'require authentication on specific status pages'
      in <filename>$INCA_DIST/webapps/inca/WEB-INF/web.xml</filename>.
    </para>

    <screen>
    &lt;security-constraint&gt;
      &lt;web-resource-collection&gt;
        &lt;web-resource-name&gt;Inca Status Pages&lt;/web-resource-name&gt;
        &lt;url-pattern&gt;/jsp/query.jsp&lt;/url-pattern&gt;
      &lt;/web-resource-collection&gt;
      &lt;auth-constraint&gt;
        &lt;role-name&gt;*&lt;/role-name&gt;
      &lt;/auth-constraint&gt;
      &lt;user-data-constraint&gt;
        &lt;transport-guarantee&gt;CONFIDENTIAL&lt;/transport-guarantee&gt;
      &lt;/user-data-constraint&gt;
    &lt;/security-constraint&gt;
    </screen>

    <para>Modify or add <filename>url-pattern</filename> tags to modify
    password access.  For example to apply password access to all
    Inca status pages, modify the <filename>url-pattern</filename> tag to below:
    </para>

    <screen>
        ...
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
        ...
    </screen>

    <para>Or to add password protection to another JSP page like
    <filename>config.jsp</filename>, add another
    <filename>url-pattern</filename> tag like below:
    </para>

    <screen>
        ...
        &lt;url-pattern&gt;/jsp/query.jsp&lt;/url-pattern&gt;
        &lt;url-pattern&gt;/jsp/config.jsp&lt;/url-pattern&gt;
        ...
    </screen>

    <para>By default, the username and password for the pages will be "inca".  To
      change this, edit <filename>$INCA_DIST/etc/realm.properties</filename> and customize the
      username and password for your installation.  If you do not want to store the
      password in plain text, use Jetty's password utility described in <xref
        linkend="https-creds">.</para>

    <para>Then restart the consumer. </para>

    <screen>% ./bin/inca restart  consumer</screen>

    <para>The next time you view the status pages, you should see a login like:</para>

    <graphic fileref="figures/ug-consumer-password.png" align="center"></graphic>

  </section>

</section>
