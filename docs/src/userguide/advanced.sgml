<section id="userguide-advanced-config">
<title>Advanced Configuration</title>

<para>This section describes advanced configuration options such as
installing components in non-default locations and changing other default properties.</para>

<section id="comp-options">
<title>Inca Component Options</title>
<para>Each inca component has a set of options that can be set in either the $INCA_DIST/etc/common/inca.properties file or from the command line.  The inca.properties file has a list of name value pairs of the format "inca.component.property=value".  For example, to start the consumer on port 8082 instead of 8080 and enter the password on the command line rather than get it from standard in, you could: </para>
<orderedList>
<listItem>
<para>edit $INCA_DIST/etc/common/inca.properties and replace:</para>
<itemizedList>
<listItem>
<para>"#inca.consumer.port=8080" with "inca.consumer.port=8082"</para>
</listItem>
<listItem><para>"inca.consumer.password=stdin:password>" with "inca.consumer.password=pass:<emphasis role="red">&lt;password&gt;</emphasis>" (where &lt;password&gt; is the password set with the createauth command)</para> 
</listItem>
</itemizedList>
<para>execute:</para>
<screen>% cd $INCA_DIST; ./bin/inca start consumer</screen>
</listItem>
<listItem>
<para><emphasis role="red">OR</emphasis> execute the following command:
<screen>% cd $INCA_DIST; ./bin/inca start consumer -p 8082 -P pass:<emphasis role="red">&lt;password&gt;</emphasis></screen>
</para>
</listItem>
</orderedList>
<para>Man pages with component options are described in <xref linkend="userguide-man">.</para> 
<para>
Note: if you have more than 5 reporter managers running, increase the number of agent and depot threads in the inca.properties file 
to be 10 more than the number of reporter managers.  For example, if running 15 reporter managers edit the inca.properties file as follows:
<screen>31 # Maximum number of threads running on the agent
32 inca.agent.numthreads=25
...
82 # Maximum number of threads running on the depot
83 inca.depot.numthreads=25
</screen>
</para>
</section>

<section id="db-config">
<title>Depot Database Configuration</title>
<para>The Inca depot uses Hibernate to interface to a relational database backend for 
storing reports and incat configuration.  By default, the Inca depot uses Hibernate's HSQL 
database but can be configured to use any Hibernate supported database.  
We have tested the Inca depot with PostgreSQL and Oracle.
</para>
<para>Steps for using a depot database other than HSQL are as follows: </para>
<orderedList>
<listItem>
<para>Stop the depot 
<screen>% cd $INCA_DIST; ./bin/inca stop depot</screen>
</para>
</listItem>

<listItem>
<para>Edit $INCA_DIST/etc/hibernate.properties</para>
<itemizedList>
<listItem>
<para>
Comment out the first 5 lines which specifies for hibernate to use 
hsql as its backend database: 
<screen>1 #hibernate.dialect=org.hibernate.dialect.HSQLDialect
2 #hibernate.connection.driver_class=org.hsqldb.jdbcDriver
3 #hibernate.connection.url=jdbc:hsqldb:test
4 #hibernate.connection.username=sa
5 #hibernate.connection.password=
</screen>
</para>
</listItem>
<listItem>
<para>
Uncomment the block which specifies for hibernate to use your database (i.e., for PostgreSQL uncomment 8-13, 
for MySQL uncomment 17-21, for Oracle uncomment 24-28). 
</para>
</listItem>
<listItem>
<para>Change the uncommented hibernate.connection.url, hibernate.connection.username and hibernate.connection.password 
property values to be the host/db name, login username and password for your database.  
</para>
</listItem>
</itemizedList>
</listItem>

<listItem>
<para>
Put JDBC drivers for your database in the $INCA_DIST/lib directory.  Driver download locations:
<ulink url="http://jdbc.postgresql.org/download.html">PostgreSQL</ulink>, 
<ulink url="http://www.mysql.com/products/connector/j/">MySQL</ulink>,
<ulink url="http://www.oracle.com/technology/software/tech/java/sqlj_jdbc/">Oracle</ulink>
</para>
</listItem>

<listItem>
<para>
Initialize the depot (set up the Inca tables):
<screen>% cd $INCA_DIST; ./bin/inca depot -d</screen>
You should see something like:
<screen>Initializing c3p0 pool... 
... 
Database Initialization Completed</screen>
</para>
</listItem>

<listItem>
<para>Start the depot 
<screen>% ./bin/inca start depot</screen>
</para>
</listItem>
</orderedList>


</section>

<section id="userguide-advanced-manual">
<title>Manual Access Method</title>

<para>A resource administrator may prefer to have local control of the
reporter manager running on their resources rather than be controlled
centrally by the Inca agent (similar to Inca 1).  In this case, an Inca
administrator can add the resource using the access method 'manual' and 
changes to the configuration will be emailed to the resource administrator.
The following steps will need to be taken by the Inca administrator and
resource administrator:
</para>

<para>Inca Administrator</para>
<simplelist type=horiz columns=1>
<member>Step <xref linkend="man-step1">: Add resource in incat with access method 'manual'</member>
</simpleList>
<para>Resource Administrator</para>
<simplelist type=horiz columns=1>
<member>Step <xref linkend="man-step2">: Install reporter manager</member>
<member>Step <xref linkend="man-step3">: Start and manually manage reporter manager</member>
</simpleList>

<orderedList>
  <listItem id="man-step1">
    <para>The Inca administrator will add the specified resource within incat
    and choose 'manual' as below:
    </para>
    <figure id="manual.fig">
      <title>Add Resource Screen</title>
      <graphic fileref="figures/incat/manual.jpg" align="center"></graphic>
    </figure>
    <para>The "Resource Admin Email" field should be filled with the email
    address of the resource administrator of the manual resource.  When suite
    changes are committed in incat, the agent will email the suite changes to
    the resource administrator.  Select "Agent->Commit" from the menu to
    commit the changes.  A set of credentials (e.g., rmcert.pem, rmkey.pem,
    trusted) will be generated in $INCA_DIST/var/rm/&lt;resource name&gt;/
    such as below:
      <screen>
% ls var/rm/manualResource/        
      catalog.xml  rmcert.pem  rmkey.pem  trusted
      </screen>
    These credentials will need to be given to the resource administrator in
    order to send reports to the depot.  The rmkey.pem will be encrypted with
    the same password as the agent's private key.  It is recommended that you
    change the password before giving them to the resource system
    administrator using the following commands:
    </para>
    <screen>
% openssl rsa -in rmkey.pem -out rmkey.pem2 -des
read RSA key
Enter PEM pass phrase: agent-passphrase
writing RSA key
Enter PEM pass phrase: new-passphrase
Verifying password - Enter PEM pass phrase: new-passphrase

% mv rmkey.pem2 rmkey.pem
    </screen>
    <para>Give the reporter manager credentials to the resource system
    administrator and instruct them to follow steps <xref linkend="man-step2"> and <xref linkend="man-step3">.
    </para>
  </listItem>
  <listItem id="man-step2">
    <para>The resource administrator will install the reporter manager distribution on their resource using the following steps:</para>
    <orderedList>
      <listItem><para>Create an installation directory for the reporter
      manager (e.g., $RM_INSTALL_DIR) and change to that
      directory.</para></listItem> 
      <listItem><para>Download
      <ulink url="http://inca.sdsc.edu/releases/2.03/Inca-ReporterManager.tar.gz">reporter manager tarball</ulink></para></listItem>
      <listItem><para>Download
      <ulink url="http://inca.sdsc.edu/releases/2.03/buildRM.sh">reporter manager build script</ulink></para></listItem>
      <listItem><para>Contact your Inca administrator for a set of
      credentials.  You should receive files called rmcert.pem, rmkey.pem,
      and trusted*.pem.  Place them in $RM_INSTALL_DIR as is.  At this point
      the directory on the remote machine should look something like this:
      <screen>% ls         
Inca-ReporterManager.tar.gz    rmcert.pem    trusted0.pem
buildRM.sh                     rmkey.pem     trusted1.pem
</screen>
      </para></listItem>
      <listItem><para>Run 'bash buildRM.sh -u false $RM_INSTALL_DIR  Inca-ReporterManager.tar.gz'.  When completed, the installation directory should looks something like this:</para>
      <screen>% ls $RM_INSTALL_DIR 
Inca-ReporterManager-8.6279    build.log    lib    var
Inca-ReporterManager.tar       buildRM.sh   man
bin                            etc          sbin

% ls $RM_INSTALL_DIR/etc/
common  log4j.properties  rmcert.pem  rmkey.pem  trusted
      </screen>
      <para>Next, install the initial set of reporters and their
      libraries.  Download <ulink url="http://inca.sdsc.edu/releases/2.03/Inca-Reporter.tar.gz">Inca reporters tarball</ulink>.  Then unpack the Inca-Reporters.tar.gz tarball and install into the reporter manager directory as follows:</para>
      <screen>
% cd $RM_INSTALL_DIR/var
% tar zxvf ../Inca-Reporter.tar.gz
% cd Inca-Reporter-*
% perl Makefile.PL PREFIX=${RM_INSTALL_DIR}/var/reporter-packages INSTALLDIRS=perl LIB=${RM_INSTALL_DIR}/var/reporter-packages/lib/perl INSTALLSCRIPT=${RM_INSTALL_DIR}/var/reporter-packages/bin INSTALLMAN1DIR=${RM_INSTALL_DIR}/var/reporter-packages/man/man1 INSTALLMAN3DIR=${RM_INSTALL_DIR}/var/reporter-packages/man/man3
% make
% make install
      </screen>
      </listItem>
    </orderedList>
  </listItem>
  <listItem id="man-step3">
    <para>The suite and any changes to that suite are emailed to the resource
    administrator specified by the Inca administrator in Step <xref linkend="man-step1">.  For example, </para>
    <screen>
 % mail
 Mail version 8.1 6/6/93.  Type ? for help.
 "/var/mail/ssmallen": 1 message 1 new
 >N  1 inca@sdsc.edu  Tue Jan 30 15:01 118/3642  "[inca notification] change"
 & t 1
 Message 1:
 From inca@rocks-101.sdsc.edu  Tue Jan 30 15:01:03 2007
 To: inca@sdsc.edu
 Subject: [inca notification] change to suite inca://localhost:6323/sampleSuite  for resource 'manualResource'
 Date: Tue, 30 Jan 2007 15:01:01 -0800 (PST)

 &lt;suite xmlns="http://inca.sdsc.edu/dataModel/suite_2.0"&gt;
   &lt;seriesConfigs xmlns=""&gt;
       &lt;seriesConfig&gt;
...
    </screen>
    <para>Save the message to a file called <filename>$RM_INSTALL_DIR/suite.xml</filename> and
    edit out the email headers until just the xml remains.  E.g.,</para>
    <screen>
 &lt;suite xmlns="http://inca.sdsc.edu/dataModel/suite_2.0"&gt;
   &lt;seriesConfigs xmlns=""&gt;
       &lt;seriesConfig&gt;
...
 &lt;/suite&gt; 
    </screen>
    <para>Next, create a repository catalog file called 
    <filename>$RM_INSTALL_DIR/var/reporter-packages/repository.xml</filename> to tell the reporter manager
    where the reporters are installed (relative to $RM_INSTALL_DIR/var/reporter-packages).  The
    <filename>repository.xml</filename>  will need to contain every reporter
    that is listed in suite.xml.  Currently, there are 2 types of entries in
    the catalog: reporters and perl libraries.  Each package has 4 tags:
    dependency, name, path, and version.  You can copy the default repository catalog with the following command, but will need to update 
   it with any non-default reporters configured in the suite.xml file:
    <screen>% cp $RM_INSTALL_DIR/var/Inca-Reporter-*/etc/common/sampleRepository.xml $RM_INSTALL_DIR/var/reporter-packages/repository.xml</screen>
   </para>
    
   <para> Finally, you can start up the reporter manager using the
       following command-line (replace "depotHost" with the hostname where the depot is running): </para>
       <screen>
% cd $RM_INSTALL_DIR; ./sbin/inca reporter-manager -d incas://<emphasis role="red">depotHost</emphasis>:6324 -c etc/rmcert.pem -k etc/rmkey.pem -t etc/trusted -e bin/inca-null-reporter -r var/reporter-packages -R sbin/reporter-instance-manager -v var -w 1 -i manualResource -s suite.xml -L DEBUG -l var/reporter-manager.log -P true
</screen>
<para>Enter the password for the reporter manager key.  Check to make sure the reporter manager is running by doing a "ps | grep reporter-manager" and make sure there aren't errors by doing a "grep ERROR $RM_INSTALL_DIR/var/*".</para>
        <para>To stop the reporter manager at any time, type </para>
             <screen>
% ./sbin/inca stop reporter-manager
</screen>
        <para>Make sure all reporter-manager ps are stopped</para>
        <screen> % ps | grep manager </screen>
        
<para>
Notes about email notification:
</para>
<itemizedList>
<listItem><para>The resource administrator will need to edit
<filename>suite.xml</filename> with any changes that are received by email,
edit the <filename>repository.xml</filename> with any new reporters, and then
restart the reporter manager.</para></listItem>
<listItem><para>The <filename>&lt;action&gt;</filename> tag in the emailed change indicates how to edit <filename>suite.xml</filename>.
For example, <filename>&lt;action&gt;add&lt;/action&gt;</filename> would be an addition to the existing suite.
</para></listItem>
<listItem><para>
If a manual reporter manager has multiple
suites, the <filename>&lt;seriesConfigs xmlns=""&gt;</filename> emailed in each suite can be
combined and put into a single <filename>suite.xml</filename> document beginning with <filename>&lt;suite
xmlns="http://inca.sdsc.edu/dataModel/suite_2.0"&gt;</filename>.
</para></listItem>
<listItem><para>
Each time the agent is restarted the manual reporter manager administrator will
receive an email for each suite that the agent would otherwise send directly to
the reporter manager.  These emails do not necessarily contain changes to the suite(s). 
</para> </listItem>
</itemizedList>
</listItem> 
</orderedList>

</section>

<section id="userguide-advanced-runnow">
<title>Manual Run Now</title>
 
<para>Oftentimes resource or system administrators will want to show that a
problem has been resolved by independently executing inca tests before they are
scheduled to run so that their results appear on status pages.  Rather than
granting resource administrators full privileges just to use incat's "run now"
button, the inca administrator can provide resource administrators with a
"manual run now" option - a command line script to execute tests and send
results to the depot.  </para>

<section id="userguide-advanced-runnow-config">
<title>Configuring the Manual Run Now Script</title>

<para>The instructions below need to be done *once* by the Inca administrator on each 
resource where the resource administrator would like to manually run tests.</para>

<orderedList>
<listItem><para>
To allow system administrators or others to execute tests with their own password, 
copy the reporter manager key and cert for them and change the password. The 
old password is the same as the password used in the createauth step of installing inca.
<screen>% cd $INCA_DIST/etc; cp rmkey.pem adminkey.pem; cp rmcert.pem admincert.pem; chmod 600 adminkey.pem; ssh-keygen -p

Enter file in which the key is (/home/.ssh/id_rsa): /home/incaReporterManager/etc/adminkey.pem
Enter old passphrase: 
Key has comment '/home/incaReporterManager/etc/adminkey.pem'
Enter new passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved with the new passphrase.
</screen>
</para></listItem>

<listItem><para>Create a custom wrapper script for <filename>$INCA_DIST/bin/inca-run-now</filename> 
called <filename>$INCA_DIST/bin/admin-run-now</filename> using the script below as an example. 
Use the depot URI for your installation as DEPOT and the agent's name for the resource as RESOURCE.  
You may need to add the "-u" parameter for the appropriate user if the reporter manager is not running as inca. 
Run the script with the "-h" flag for more information about its input parameters:
<screen>% setenv PERL5LIB lib/perl:$PERL5LIB; bin/inca-run-now -h</screen>
</para><para>
Example wrapper script:
<screen>#!/bin/sh

DEPOT=incas://localhost:6324
RESOURCE=localResource

if ( test -z "${PERL5LIB}" ); then
PERL5LIB=lib/perl
else
PERL5LIB=lib/perl:${PERL5LIB}
fi
export PERL5LIB

./bin/inca-run-now -c etc/admincert.pem -d $DEPOT -k etc/adminkey.pem -P "stdin:password:" -t etc/trusted -i $RESOURCE $*
</screen></para>
</listItem>

<listItem><para> 
<emphasis role="red">(optional)</emphasis>The command to use the <filename>admin-run-now</filename> script could be 
added to the reporter details status pages.  This would require editing the <filename>$INCA_DIST/etc/instance.xsl</filename> 
file on the machine where the consumer is running and adding the xsl required to print a command like:
<screen> % cd /home/inca/inca2install; ./bin/admin-run-now ant-unit </screen>
The xsl would be similar to:
<screen>&lt;tr&gt;
  &lt;td colspan="2" class="header"&gt;&lt;xsl:text&gt;Run now command (system admins only):&lt;/xsl:text&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td colspan="2"&gt;
    &lt;xsl:variable name="repPath" select="$report/reporterPath"/&gt;
    &lt;xsl:variable name="incaloc" select="replace($report/reporterPath, '/var/reporter-packages/bin/.*', '')" /&gt;
    &lt;p class="code"&gt; &lt;xsl:text&gt;% cd &lt;/xsl:text&gt;
    &lt;xsl:value-of select="$incaloc"/&gt;
    &lt;xsl:text&gt;; ./bin/admin-run-now &lt;/xsl:text&gt;
    &lt;xsl:value-of select="$nickName"/&gt;&lt;/p&gt;
  &lt;/td&gt;
&lt;/tr&gt;</screen>
</para></listItem>
</orderedList>
</section>


<section id="userguide-advanced-runnow-using">
<title>Using the Manual Run Now Script</title>

<orderedList>

<listItem><para> 
Log into the inca account on the desired resource and change to the $INCA_DIST directory.
<screen>% cd $INCA_DIST</screen>
</para></listItem> 

<listItem><para> 
Execute <filename>admin-run-now</filename> script using the series nickname as the 
input parameter and the password from your inca administrator: 
<screen>% ./bin/admin-run-now ant_version
password:*********
Started Inca reporter-manager</screen>
You can also print the XML result that gets sent to the Inca server 
in <filename>$INCA_DIST/var/run-now.log</filename> 
by using the "-L DEBUG" flag:
<screen>% ./bin/admin-run-now -L DEBUG ant_version
password:*********
Started Inca reporter-manager</screen>
</para></listItem> 

<listItem><para> 
Check for errors in <filename>$INCA_DIST/var/run-now.log</filename>.
Wait about 10-15 minutes to view the result on your inca status page (data is 
cached and takes a few minutes to update).
</para></listItem> 

<listItem><para> 
<emphasis role="red">(optional)</emphasis>Execute multiple tests: in order 
to specify that more than one test be executed, 
use a Perl regex expression instead of the test name like:
<screen>% ./bin/admin-run-now &lt;perl regex&gt;</screen>
</para><para>
For example, to execute all ant tests
<screen>% ./bin/admin-run-now "ant.*"</screen>
</para><para>
In order to check your regular expression, you can use the "-l" flag. 
This option will list the tests but will NOT execute them. 
For example, to display all ant tests that would be executed:
<screen>% ./bin/admin-run-now -l "ant.*"
Suite:  sampleSuite (2 series)
ant_helloworld_compile_test
ant_version</screen>
</para><para>
To view all tests, use the regular expression ".*" as below:
<screen>% ./bin/admin-run-now -l ".*"</screen>
</para><para>
You will notice that test names are listed under a "Suite: &lt;name&gt;" header. 
You can also use that suite name to execute all of the tests included in it. 
For example, the following shows the tests available in the sampleSuite kit:
<screen>Suite:  sampleSuite (10 series)
ant_helloworld_compile_test
ant_version
gcc_hello_world
gcc_version
java_hello_world
java_version
openssh_version
openssl_version
vtk-nvgl_version
wget_page_test</screen>
</para><para>
To execute all test in a kit using the suite name, type:
<screen>% ./bin/admin-run-now sampleSuite</screen>
</para></listItem> 
</orderedList>


<para>Run the script with the "-h" flag for help information:
<screen>% ./bin/admin-run-now -h</screen>
</para>
</section>

</section>

<section id="userguide-advanced-srcdist">
<title>Source Distributions</title>
 
<para>
  Source distributions of the Inca components are also available.  The 
  following table lists the Inca component source distributions and shows how
  to build each of them.  Note, that <ulink url="http://ant.apache.org">Apache
  Ant</ulink> is needed for the Inca components implemented in Java.  
</para>

  <table><title>Inca component source distributions</title>
  <tgroup cols="2">
  <thead>
    <row>
      <entry><para>Component</para></entry>
      <entry><para>Build</para></entry>
    </row>
  </thead>
  <tbody>
    <row>
      <entry><para><ulink url="http://inca.sdsc.edu/releases/2.03/inca-agent-src.tar.gz">agent</ulink></para></entry>
      <entry><para>ant -Dinstalldir=$INCA_DIST install</para></entry>
    </row>
    <row>
      <entry><para><ulink url="http://inca.sdsc.edu/releases/2.03/inca-common-java-src.tar.gz">common</ulink> (used by all Inca Java components)</para></entry>
      <entry><para>ant -Dinstalldir=$INCA_DIST install</para></entry>
    </row>
    <row>
      <entry><para><ulink url="http://inca.sdsc.edu/releases/2.03/inca-consumers-src.tar.gz">consumer</ulink></para></entry>
      <entry><para>ant -Dinstalldir=$INCA_DIST install</para></entry>
    </row>
    <row>
      <entry><para><ulink url="http://inca.sdsc.edu/releases/2.03/inca-depot-src.tar.gz">depot</ulink></para></entry>
      <entry><para>ant -Dinstalldir=$INCA_DIST install</para></entry>
    </row>
    <row>
      <entry><para><ulink url="http://inca.sdsc.edu/releases/2.03/incat-src.tar.gz">incat</ulink></para></entry>
      <entry><para>ant -Dinstalldir=$INCA_DIST install</para></entry>
    </row>
    <row>
      <entry><para><ulink url="http://inca.sdsc.edu/releases/2.03/Inca-Reporter.tar.gz">reporters</ulink></para></entry>
      <entry><para>perl Makefile.PL &lt;options&gt;</para></entry>
    </row>
    <row>
      <entry><para><ulink url="http://inca.sdsc.edu/releases/2.03/Inca-ReporterManager.tar.gz">reporter manager</ulink></para></entry>
      <entry><para>perl Makefile.PL &lt;options&gt;</para></entry>
    </row>
    <row>
      <entry><para><ulink url="http://inca.sdsc.edu/releases/2.03/Inca-WS.tar.gz">web services</ulink></para></entry>
      <entry><para>perl Makefile.PL &lt;options&gt;</para></entry>
    </row>
  </tbody>
  </tgroup>
  </table>

</section>

</section>
