<section id="userguide-incat">
<title>Administering Inca with incat</title>

  <para>
  Inca provides a graphical administration tool, named incat, that allows you
  to configure your deployment.  Using incat, you can specify the repositories
  from which Inca should retrieve reporters, the hosts where you wish to
  run reporters, and which reporters you wish to run on each host.
  <graphic fileref="figures/arch-incat.jpg" align="center"></graphic>
  </para><para>
  You can connect incat to a running Inca Agent via the
  -A option, e.g., "cd $INCA_DIST; ./bin/inca start incat -A localhost:6323".
  </para><para>
  As mentioned in the <link linkend="qs-step5">Quick Start guide</link>, you
  can execute "./bin/inca default" from the command line to install a default Inca configuration.
  The discussion below describes how you would use incat to specify the same
  configuration.  Before continuing, use the inca script to start both a Depot
  and an Agent on your host.
  </para>

  <section id="userguide-incat-repos">
  <title>Repositories</title>
  <para>
  Incat begins by showing the panel for Inca reporter repositories (as shown in <xref linkend="incat.rep.fig">).  
  The default Inca configuration retrieves reporters from the 
  $INCA_DIST/Inca-Reporter-* repository on the agent machine.  To add this repository to your list, press the Add button in the
  Repositories section, enter the file:/ location of the Packages.gz file
  in the pop-up window that appears, then press the OK button.  Within a few
  seconds you should see the repository appear in the Repositories list, a
  set of reporters in the Reporters list, and properties for the first reporter
  in the Reporter Properties list.  Reporter source code is viewable by double clicking on a reporter name or by selecting 
  the reporter name and pressing the "Show" button.
  </para>
  <figure id="incat.rep.fig">
          <title>Incat Repositories Tab</title>
          <graphic fileref="figures/incat/incat-annotated-repository.jpg" align="center"></graphic>
 </figure>
  </section>

  <section id="userguide-incat-resources">
  <title>Resource Configuration</title>
  <para>
  The default Inca configuration defines three resource groups -- a group called "localResource" that
  specifies the host where the Inca Agent will launch a new Reporter Manager (localhost) and two container groups called "localSite" (contains "localResource") and "defaultGrid" (contains "localSite") that can be extended to include any other hosts running Reporter Managers.  The default resource configuration 
  is shown is <xref linkend="incat.res.fig">.  
  </para>
  <figure id="incat.res.fig">
          <title>Incat Resource Configuration Tab</title>
          <graphic fileref="figures/incat/incat-annotated-resource.jpg" align="center"></graphic>
 </figure>
<para>
  The configuration above can be duplicated in an empty Inca installation by 
  pressing the Resource Configuration tab near the top of the incat window and then entering
  information about the hosts on which you want Inca to run reporters.
  To define the default groups above in incat, press the Add button in the Resource Groups section to
  open the resource group edit dialog shown in <xref linkend="incat.res.add.fig">.
  </para>
  <figure id="incat.res.add.fig">
          <title>Incat Add Resource Dialog</title>
  	  <graphic fileref="figures/incat/incat-annotated-resource-add.jpg" align="center"></graphic>
 </figure>
  <para>
  In the Group Name text box, enter the name "localResource" as a nickname for the machine the Reporter Manager client runs on. 
  Enter "localhost" in the Members text box and select "local" as the access method.
  Press OK to complete entry of this resource group.  Incat will close the
  resource group edit dialog and will display localResource in the Resource Groups
  section of the Resource Configuration panel.
  </para>
  <para>
  Press the Add button again to add a second resource group.  Give this one
  the name "defaultGrid" and enter "localResource" in the Members text box.  This tells
  incat that any hosts in the "localResource" group (localhost, in this case) are also
  part of the defaultGrid group.  If you defined other groups, "siteB", "siteC",
  etc., you could include these in defaultGrid by listing them in the Members
  text box, separated by spaces.  Press OK to complete entry of this resource
  group.  In the Resource Groups list, select each group and notice that localhost is listed in the 
  the Members panel.
  </para>
  </section>

  <section id="userguide-incat-suites">
  <title>Suites</title>
  <para>
  Pressing the Suites tab near the top of the incat window takes you to incat's
  suite/series specification panel.  Here you specify the reporters you want to
  run, the resource groups to run them on, how frequently to run them, and the
  arguments to use when running them.
  </para>
  <para>
  The default Inca configuration defines a single suite named sampleSuite
  that contains eight series as shown in <xref linkend="incat.suite.fig">.  
  <figure id="incat.suite.fig">
          <title>Incat Suite Tab</title>
          <graphic fileref="figures/incat/incat-annotated-suite.jpg" align="center"></graphic>
 </figure>
  </para>
  <para>
  In a new Inca installation, you can add the default suite above by pressing Add button in the Suites section of
  the panel, entering "sampleSuite" in the pop-up window, then pressing the OK
  button.  To add series to the new suite, press the Add
  button in the Series section to open the incat series dialog and configure each like the gcc_hello_world series in <xref linkend="incat.series.fig">.
  <figure id="incat.series.fig">
          <title>Incat Series Configuration</title>
          <graphic fileref="figures/incat/incat-annotated-series.jpg" align="center"></graphic>
 </figure>
  </para>
  <para>
  The bottommost two text boxes in the series dialog
  allow you to test the output of the reporter and send email if the test
  fails.  This is covered in <xref linkend="userguide-incat-comparison"> below;
  for this series leave these boxes blank.  Press the OK button, and incat will
  close the series dialog box and add the series to the Series list in the
  suite/series specification panel.
  </para><para>
  The other nine series in the default Inca configuration are composed
  similarly to the first one.  Press the Add button in the series section for
  each of them, then set the values in the series dialog as specified in the
  table below.  Set the log argument for each series to 3 and the frequency to
  10 minutes.
  </para>

  <table><title>Default Configuration Series</title>
  <tgroup cols="3">
  <thead>
    <row>
      <entry><para>Reporter</para></entry>
      <entry><para>Nickname</para></entry>
      <entry><para>Arguments</para></entry>
    </row>
  </thead>
  <tbody>
    <row>
      <entry><para>cluster.admin.ant.unit</para></entry>
      <entry><para>ant_helloworld_compile_test</para></entry>
    </row>
    <row>
      <entry><para>cluster.admin.ant.version</para></entry>
      <entry><para>ant_version</para></entry>
    </row>
    <row>
      <entry><para>cluster.compiler.gcc.version</para></entry>
      <entry><para>gcc_version</para></entry>
    </row>
    <row>
      <entry><para>cluster.compiler.any.unit</para></entry>
      <entry><para>java_hello_world</para></entry>
      <entry><para>compiler: javac; lang: java</para></entry>
    </row>
    <row>
      <entry><para>cluster.java.sun.version</para></entry>
      <entry><para>java_version</para></entry>
    </row>
    <row>
      <entry><para>cluster.interactive_access.openssh.version</para></entry>
      <entry><para>openssh_version</para></entry>
      <entry><para>ssh: ssh</para></entry>
    </row>
    <row>
      <entry><para>cluster.security.openssl.version</para></entry>
      <entry><para>openssl_version</para></entry>
    </row>
    <row>
      <entry><para>viz.lib.vtk-nvgl.version</para></entry>
      <entry><para>vtk-nvgl_version</para></entry>
    </row>
    <row>
      <entry><para>grid.wget.unit</para></entry>
      <entry><para>wget_page_test</para></entry>
      <entry><para>page: http://cnn.com/index.html</para></entry>
    </row>
  </tbody>
  </tgroup>
  </table>

  </section>

  <section id="userguide-incat-commits">
  <title>Committing/Saving</title>
  <para>
  Your Inca deployment configuration is now complete.  At this point, it's a
  good idea to use the "Save" option in incat's File menu to write the
  configuration to a file (<xref linkend="incat.save.fig">).  That way, you have a local copy of the configuration
  that you can later modify.  The file is formatted XML; if you're curious, you
  can read through it to see how incat represents the information you've
  entered.
  <figure id="incat.save.fig">
          <title>Incat Save Configuration to File</title>
          <graphic fileref="figures/incat/save.jpg" align="center"></graphic>
 </figure>
  </para>
  <para>
  Although your configuration is complete, it's not yet active.  To tell Inca
  to begin running reporters, you need to have incat send your configuration to
  your Inca Agent.  If you started incat with the -A argument, then you're
  already connected to your Agent.  Otherwise, use the "Connect" option in
  incat's Agent menu to establish a connection.  Once you're connected, you can
  use the "Commit" option in the Agent menu to send the configuration to the
  Agent (<xref linkend="incat.commit.fig">).  In response, the Agent will install the Inca Reporter Manager code on
  the host specified in incat's "Resource Configuration" panel and begin running the reporters you specified in the "Suite Series" panel.
  <figure id="incat.commit.fig">
          <title>Incat Save Configuration to Agent</title>
          <graphic fileref="figures/incat/commit.jpg" align="center"></graphic>
 </figure>
  </para>
  </section>

  <section id="access-methods">
  <title>Resource Access Methods</title>
  <para>
  The Inca Agent can use the following access methods to stage and start
  Reporter Managers on resources:
  </para>
<itemizedList>
<listItem>
<para>manual:</para>
<para>
  Entering a manual resource group indicates that you want complete, direct
  control over Inca execution on the group.  For a manual resource group you
  must start the Reporter Manager on the command line and restart it any time
  you want to change the reporter series configuration for the group.  The
  Agent will NOT automatically start a Reporter Manager for a manual resource
  as it will for local, ssh, or globus2 resources.  For a manual resource group, 
  incat provides a text box for you to enter an email that should be notified 
  when the Inca configuration on the resource needs to be updated.
  </para>
</listItem>
<listItem>
<para>local:</para>
<para>
  The Agent starts a Reporter Manager on the same machine where the Agent is
  running (localhost).  
  </para>
</listItem>
<listItem>
<para>ssh:</para>
<para>
  The Agent starts a Reporter Manager on a remote machine using ssh to access
  the remote machine.  Reporter Manager files are copied from the Agent to the
  remote machine using sftp.  For ssh resource groups, incat provides text
  boxes for you to enter the login id, password, and path to the ssh key file
  on the Agent machine.  For security purposes, incat displays asterisks for
  the password and encrypts it when you save the configuration to a file.
  </para>
</listItem>
<listItem>
<para>globus2:</para>
<para>
  The Agent starts a Reporter Manager on a remote machine using globus to
  access the remote machine.  Reporter Manager files are copied from the Agent
  to the remote machine using GridFtp.  When you select globus2 in the Access
  Method pull-down, incat provides text boxes for you to enter contact
  information for the resource's Globus Gram and GridFtp servers.  If you leave
  these boxes blank, Inca defaults to ports 2119 and 2811, respectively, for
  the first host in the resource group's member list.  Access to Globus hosts
  requires an active Globus proxy on the Agent's host.  You can either create a
  manual proxy on the Agent machine before starting, or you can store a proxy
  on a myproxy server and complete the four incat proxy dialog boxes (see
  below) so that the Agent can obtain one as needed.
  </para>
</listItem>
</itemizedList>
</section>

<section id="proxies">
<title>Proxies</title>
<para>
For convenience, the Inca framework can be used to retrieve a proxy for the
globus2 access method or for reporters that require an active proxy.
Reporters that require a proxy should use the Inca::Reporter::GridProxy 
module described in <xref linkend="reporter-api">.  
</para>
<para>
Before configuring Inca to retrieve proxies, first store a proxy on a myproxy
server.  For information about setting up a myproxy server or storing proxies
on a server, please see <ulink url="http://grid.ncsa.uiuc.edu/myproxy/">the
official myproxy documentation</ulink>.
</para>
<para>
The Agent can automatically retrieve a proxy from a myproxy server if the proxy
information is defined in incat as follows:
</para>
  <graphic fileref="figures/incat/incat-annotated-resource-proxy.jpg" align="center"></graphic>
  <para>The dialog boxes are the hostname of the myproxy server, the username and password used to store the proxy, and the lifetime in hours that the agent should retrieve a proxy for (the default is 12 hours).</para>
  <para>Once proxy information is committed to the agent, it can be retrieved by reporter managers. Each time a reporter manager is ready to run a reporter that needs a proxy it:
<itemizedList>
<listItem><para>requests the MyProxy passphrase from the agent</para></listItem>
<listItem><para>uses the MyProxy command-line client to retrieve proxy credentials from a MyProxy server</para></listItem>
<listItem><para>clears the MyProxy passphrase from memory</para></listItem>
</itemizedList>
</para>
<para>
The MyProxy passphrase is stored on the agent in the $INCA_DIST/var/resources.xml file and is 
encrypted with the same passphrase as the agent's private key.  The MyProxy passphrase passes between the 
reporter manager and agent over their SSL connection.
  <graphic fileref="figures/arch-proxy.jpg" align="center"></graphic>
  </para>
</section>

  <section id="userguide-incat-macros">
  <title>Using Resource Macros</title>
  <para>
  Resource macros provide a shorthand for defining multiple, similar series.
  For example, suppose you wanted to add three series to the configuration
  defined above to measure the ping time to three different hosts, named
  blue.ufo.edu, green.ufo.edu, and red.ufo.edu.  One approach would be to
  define a series for blue, use the Clone button in the Series section
  of the Suites panel to make two copies, then modify them to ping green and
  red.
  </para><para>
  A better approach is to use a macro for the host names and let Inca replicate
  the series for you.  In the Resource Configuration panel, click on
  defaultGrid in the Resource Group section.  Next, press the Add button
  beneath the Macros section.  This opens a dialog box that allows you to enter
  the name and value(s) of a macro associated with the current resource group.
  <graphic fileref="figures/incat/incat-annotated-macro-dialog.jpg" align="center"></graphic>
  </para><para>
  Enter "targets" in the Macro Name text box and "blue" in the macro value edit
  box, then use the "Add" button to add "green" and "red" as the second and
  third values of the macro.  Afterwards, press OK.  The definition of the
  targets macro now appears in the Macros section of the Resource Configuration
  panel.
  <graphic fileref="figures/incat/macro1.jpg" align="center"></graphic>
  </para>
  <para>The targets macro is also defined for the other resource groups since
  the defaultGrid contains all other groups.  As shown in
  <xref linkend="incat.macro2.fig">, macros appear grey if they were defined in
  a resource group other than the one selected.  You can override an inherited
  macro value by selecting the macro in the Macros panel and pressing the Edit
  button to open the macro edit dialog.  After you change the macro value and
  press OK, the updated macro definition will show in black in the Macros
  panel, indicating that the resource is no longer using the inherited value.
  <figure id="incat.macro2.fig">
    <title>Inherited Macro</title>
    <graphic fileref="figures/incat/macro2.jpg" align="center"></graphic>
  </figure>
  </para>
  <para>
  To make use of the macro you've defined, click the Suites tab, then press the
  Add button underneath the Series section to open the series edit dialog.  In
  the dialog, set the reporter to grid.benchmark.performance.ping and the
  resource group to localResource.
  </para><para>
  In the host text box in the Arguments section of the dialog, enter
  "@targets@.ufo.edu".  Macro references in incat are indicated by placing a
  "@" before and after the macro name.  When the Inca Agent encounters a macro
  reference in a series, it makes one copy of the series for each value of the
  macro.  Since the targets macro has three values--blue, green, and red--the
  Inca Agent will make three copies of this series, substituting a single value
  for the macro reference in each.  In this case that means that you'll have
  one series with a host argument of "blue.ufo.edu", one with a host argument
  of "green.ufo.edu", and one with a host argument of "red.ufo.edu".
  </para><para>
  The inca web pages use the series nickname when displaying series results.
  If you leave the series nickname with its default value, the name of the
  reporter, then all three series will have the same nickname.  Instead, you
  can enter "ping_to_@targets@" in the nickname text box.  The Inca Agent will
  expand this reference in parallel with the reference in the host argument, so
  your three series will have the nicknames ping_to_blue, ping_to_green, and
  ping_to_red, respectively.
  </para>
  <graphic fileref="figures/incat/macro3.jpg" align="center"></graphic>
  
  <section id="userguide-incat-all2all">
  <title>Configuring "all2all" Series Using Macros</title>
  <para>The "all2all" test results are calculated by the consumer.  The image below 
  illustrates how an "all2all" series would be configured. 
  <graphic fileref="figures/incat/incat-annotated-all2all.jpg" align="center"></graphic>
  </para>
  </section>
  </section>

  <section id="userguide-incat-comparison">
  <title>Series Comparison and Notification</title>
  <para>
  For a particular series, the Inca system by default reports only whether or
  not the series reporter was able to execute successfully--whether a version
  reporter was able to determine a package version, a unit reporter was able to
  run a program, etc.  Using Inca's comparison and notification feature, you
  can refine a series to define success more precisely and to receive
  notification from Inca when a series reporter detects a problem.  The bottom
  two text boxes of the series edit dialog provide access to Inca's comparison
  and notification feature.
  </para>
  <graphic fileref="figures/incat/incat-annotated-gcc-version.jpg" align="center"></graphic>
  <para>
  The comparison expression can test the content of the report body, the content of the
  report error message, or the value of any symbols defined in the report body
  by &lt;ID&gt; tags.  The expression may use any of the boolean operators
  &lt;, &lt;=, &gt;, &gt;=, ==, and !=, plus perl's pattern match (=~) and
  mismatch (!~) operators.  One simple test would be "body =~ /./", which would
  test whether the report body contained any characters.  Tests can be joined
  together by the &amp;&amp; and || operators.  Using these, you could ignore
  an expected, minor error with the test
  "body =~ /./ || errorMessage == 'Try again later'".
  </para><para>
  As mentioned above, you can include symbols defined in the report body in
  your tests.  The Inca system uses the content of any subsequent tag as the
  symbol value.  For example, the body of the output of the gcc version
  reporter might be
  </para>
  <screen>
  &lt;body&gt;
    &lt;package&gt;
      &lt;ID&gt;gcc&lt;/ID&gt;
      &lt;version&gt;3.1&lt;/version&gt;
    &lt;/package&gt;
  &lt;/body&gt;
  </screen>
  <para>
  Here, Inca will use "3.1" as the value of the symbol "gcc".  With this
  output, the comparison test "gcc &gt;= 3.0" would succeed, while the
  comparison "gcc == 3.0" would fail.  If the report body contains an
  &lt;ID&gt; tag with no subsequent tag, the value of the symbol is defined
  to be "".
  </para>
  <para>The image below illustrates how a comparison for subpackage versions would be configured. 
  <graphic fileref="figures/incat/incat-annotated-subpackage-version.jpg" align="center"></graphic>
  </para><para>
  By default, emails sent by Inca include a short description of the series,
  resource, and comparison.  You can customize the content and subject of the
  emails by setting the depot.notification property in your 
  <filename>$INCA_DIST/etc/common/inca.properties</filename>
  file before starting the depot.  The value of this property can mix literal
  text you want included in the email with macro-like references to information
  about the series and reporter execution.  For example, the property setting
  that generates the default email format is:
  <screen>inca.depot.notification=\
SUBJECT=Inca Notification: @nickname@ on @hostname@ @result@ED\n \
The following Inca test has @result@ED:\n\n \
RAN AT:  @collected@\n\n \
RAN ON:  @hostname@\n\n \
TEST:  @reporterPath@\n\n \
INPUT PARAMETERS:  @args@\n\n \
LOGGED COMMANDS: @log@\n\n \
ERROR MESSAGE: @errorMessage@\n\n \
STANDARD ERROR: @stderr@\n\n \
\n\n \ 
details at http://localhost:8080/inca/xslt.jsp?xsl=instance.xsl&amp;instanceID=@instanceId@&amp;configID=@configId@\n\n
  </screen>
  As shown here, multi-line emails are specified by including newline markers
  ("\n") in the property value.  Inca uses the line in the value that contains
  "SUBJECT=" as the email subject; remaining lines are the email body.  Any
  lines that contain an undefined macro value are removed, so, in the above,
  the final line would not appear if the reporter execution didn't produce an
  error message.
  </para><para>
  These are the macro names that Inca defines for your use in constructing
  notification emails:
  <table><title>Email Macro Names</title>
  <tgroup cols="2">
  <thead>
    <row>
      <entry><para>Name</para></entry>
      <entry><para>Meaning</para></entry>
    </row>
  </thead>
  <tbody>
<!--
NOTE: Some available email macros have little practical use for end users.  The
documentation for these is commented below to avoid cluttering the table.
-->
<!--
    <row>
      <entry><para>activated</para></entry>
      <entry><para>the suite version where this series was last activated</para></entry>
    </row>
-->
    <row>
      <entry><para>args</para></entry>
      <entry><para>the arguments passed to the reporter</para></entry>
    </row>
    <row>
      <entry><para>body</para></entry>
      <entry><para>the report body</para></entry>
    </row>
    <row>
      <entry><para>collected</para></entry>
      <entry><para>the time the reporter ran</para></entry>
    </row>
    <row>
      <entry><para>commited</para></entry>
      <entry><para>the time the report was entered in the Depot</para></entry>
    </row>
    <row>
      <entry><para>comparison</para></entry>
      <entry><para>the comparison specified for this series</para></entry>
    </row>
<!--
    <row>
      <entry><para>comparisonId</para></entry>
      <entry><para>the Inca database id of the comparison</para></entry>
    </row>
-->
    <row>
      <entry><para>comparisonResult</para></entry>
      <entry><para>the output of the comparison for this report, typically "SUCCESS" or "FAIL" followed by a list of identifiers</para></entry>
    </row>
<!--
    <row>
      <entry><para>comparitor</para></entry>
      <entry><para>the name of the comparitor class used with this series ("ExprComparitor")</para></entry>
    </row>
-->
    <row>
      <entry><para>completed</para></entry>
      <entry><para>whether or not the reporter completed execution</para></entry>
    </row>
    <row>
      <entry><para>configId</para></entry>
      <entry><para>the Inca database id of the series configuration</para></entry>
    </row>
    <row>
      <entry><para>context</para></entry>
      <entry><para>the complete command, including arguments, used to execute the reporter</para></entry>
    </row>
    <row>
      <entry><para>cpuLimit</para></entry>
      <entry><para>the maximum CPU seconds allowed for this reporter to execute</para></entry>
    </row>
    <row>
      <entry><para>cpuUsage</para></entry>
      <entry><para>the actual CPU seconds used by this reporter execution</para></entry>
    </row>
<!--
    <row>
      <entry><para>deactivated</para></entry>
      <entry><para>the suite version where this series was last deactivated, -1 if never</para></entry>
    </row>
-->
    <row>
      <entry><para>errorMessage</para></entry>
      <entry><para>any failure message recorded by the reporter</para></entry>
    </row>
    <row>
      <entry><para>hostname</para></entry>
      <entry><para>the name of the host where the reporter executed</para></entry>
    </row>
    <row>
      <entry><para>instanceId</para></entry>
      <entry><para>the Inca database id of this reporter execution</para></entry>
    </row>
    <row>
      <entry><para>log</para></entry>
      <entry><para>log messages recorded by the reporter</para></entry>
    </row>
    <row>
      <entry><para>memoryLimit</para></entry>
      <entry><para>the maximum memory MB allowed for this reporter to execute</para></entry>
    </row>
    <row>
      <entry><para>memoryUsage</para></entry>
      <entry><para>the actual memory MB used by this reporter execution</para></entry>
    </row>
    <!--
    <row>
      <entry><para>nice</para></entry>
      <entry><para>whether to run this reporter nice -9 (unused)</para></entry>
    </row>
    -->
    <row>
      <entry><para>nickname</para></entry>
      <entry><para>the nickname of this series</para></entry>
    </row>
<!--
    <row>
      <entry><para>notifier</para></entry>
      <entry><para>the name of the notifier class ("EmailNotifier")</para></entry>
    </row>
-->
    <row>
      <entry><para>reportId</para></entry>
      <entry><para>the Inca database id of the report</para></entry>
    </row>
    <row>
      <entry><para>reporter</para></entry>
      <entry><para>the name of the reporter</para></entry>
    </row>
    <row>
      <entry><para>reporterPath</para></entry>
      <entry><para>the path to the reporter on the host where it executed</para></entry>
    </row>
    <row>
      <entry><para>resource</para></entry>
      <entry><para>the name of the Inca resource where the reporter executed</para></entry>
    </row>
    <row>
      <entry><para>result</para></entry>
      <entry><para>"PASS" or "FAIL", depending on whether or not the reporter completed execution</para></entry>
    </row>
<!--
    <row>
      <entry><para>runInfoId</para></entry>
      <entry><para>the Inca database id of runtime information for this reporter execution</para></entry>
    </row>
-->
    <row>
      <entry><para>seriesId</para></entry>
      <entry><para>the Inca database id of this series</para></entry>
    </row>
    <row>
      <entry><para>stderr</para></entry>
      <entry><para>any text written by the reporter to stderr</para></entry>
    </row>
    <row>
      <entry><para>target</para></entry>
      <entry><para>the email to which the notification is sent</para></entry>
    </row>
    <row>
      <entry><para>uri</para></entry>
      <entry><para>the reporter URI</para></entry>
    </row>
    <row>
      <entry><para>version</para></entry>
      <entry><para>the reporter version</para></entry>
    </row>
    <row>
      <entry><para>wallClockLimit</para></entry>
      <entry><para>the maximum wall clock seconds allowed for this reporter to execute</para></entry>
    </row>
    <row>
      <entry><para>wallClockUsage</para></entry>
      <entry><para>the actual wall clock seconds used by this reporter execution</para></entry>
    </row>
    <row>
      <entry><para>workingDir</para></entry>
      <entry><para>the working directory for the reporter manager on the host where the reporter executed</para></entry>
    </row>
  </tbody>
  </tgroup>
  </table>
  </para>

  </section>

</section>
